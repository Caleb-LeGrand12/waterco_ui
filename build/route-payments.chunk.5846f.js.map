{"version":3,"sources":["webpack:///./routes/payments/index.js","webpack:///./components/form/index.js","webpack:///./routes/payments/style.css","webpack:///./model/payment/index.js","webpack:///./components/add-edit-payment/style.css","webpack:///./components/data-table/index.js","webpack:///./components/add-edit-payment/index.js"],"names":["PaymentAdminUI","state","checkedData","Map","openDialog","membersList","rowData","undefined","_rowDef","bind","getMembers","this","props","isLoading","PaymentModel","paymentList","setState","componentDidMount","_onCheckbox","evt","memberId","target","checked","set","delete","_onRowClick","tagName","row","index","onClick","type","onChange","paymentId","billId","amountPaid","totalAmount","premisId","render","disabled","Array","from","values","length","className","styles","memberAdminContainer","btnsContainer","variant","color","tableContiner","tableSection","rowDef","tableContainer","showCheckBoxes","data","name","open","Component","Form","value","ref","createRef","current","elements","forEach","elt","oninput","updateFormValue","onchange","getAttribute","Number","Date","onUpdateFormValue","onSubmit","preventDefault","propsObj","children","module","exports","DataTable","tableData","columns","selectAll","selectedRows","Set","footDef","getColumns","onRowClicked","isArray","child","ColDef","onRowSectionChange","has","deSelectRow","selectRow","rowNumbers","showRowNumbers","Object","entries","map","td","tdName","tdValue","toLocaleString","onRowSelection","add","WeakSet","se","lectedRows","renderTableHeader","keys","columnName","column","sortable","sortBy","renderTableBody","allowedRows","col","renderTableFoot","result","calculate","d","isNaN","reduce","acc","currVal","_searchObject","seachObject","queryString","found","objectValue","valueType","toString","toLowerCase","includes","search","filter","singleData","trim","searchValue","AddEditPayment","showDialog","onClose","aria-labelledby","id","dialogHeader","autoFocus","dividers","noValidate","autoComplete","textfieldInput","fullWidth","label","submitBtn"],"mappings":"yUAOqBA,E,YACjB,aAAc,aACV,sBACKC,MAAQ,CACTC,YAAa,IAAIC,IACjBC,YAAY,EACZC,YAAa,GACbC,aAASC,GAEb,EAAKC,QAAU,EAAKA,QAAQC,K,yHAAb,KARL,E,mHAWRC,WAAN,gDAEUL,EAAc,OADpBM,KAAKC,MAAMC,WAAU,GACD,gBAAMC,IAAaC,eAAnB,KAAgC,uBAA9CV,EAAc,EACpBM,KAAKC,MAAMC,WAAU,GACrBF,KAAKK,SAAS,CAAEX,gBAFoC,0CAFxD,a,EAOAY,kBAAA,WACIN,KAAKD,c,EAGTQ,YAAA,SAAYC,EAAKb,GACb,IAAMc,EAAWd,EAAQc,SAEnBlB,EAAcS,KAAKV,MAAMC,YADfiB,EAAIE,OAAOC,QAEdpB,EAAYqB,IAAIH,EAAUd,GAClCJ,EAAYsB,OAAOJ,GACxBT,KAAKK,SAAS,CAAEd,iB,EAGpBuB,YAAA,SAAYN,EAAKb,GAKbK,KAAKK,SAJqB,SAAtBG,EAAIE,OAAOK,QAID,CAAEtB,YAAY,EAAME,WAHhB,CAAEF,YAAY,EAAOE,aAASC,K,EAMpDC,QAAA,SAAQmB,EAAKC,EAAOtB,GAAS,WACzB,OAAO,QAAIuB,QAAS,SAAAV,GAAG,OAAI,EAAKM,YAAYN,EAAKb,KAC7C,YACI,WAAOwB,KAAK,WAAWC,SAAU,SAAAZ,GAAG,OAAI,EAAKD,YAAYC,EAAKb,OAElE,YAAKA,EAAQ0B,WACb,YAAK1B,EAAQ2B,QACb,YAAK3B,EAAQ4B,YACb,YAAK5B,EAAQ6B,aACb,YAAK7B,EAAQ8B,Y,EAGrBC,OAAA,WAAYpC,GAAO,Y,2EAAA,IACf,IAAMG,EAAaH,EAAMG,WAEnBkC,EAAiC,GADnBC,MAAMC,KAAKvC,EAAMC,YAAYuC,UACpBC,OAC7B,OACI,SAAKC,UAAWC,IAAOC,sBACnB,SAAKF,UAAWC,IAAOE,eACnB,EAAC,IAAD,CAAQjB,QAAS,WAAC,OAAI,EAAKb,SAAS,CAAEZ,YAAY,KAAS2C,QAAQ,YAAYC,MAAM,WAArF,iBACA,EAAC,IAAD,CAAQD,QAAQ,YAAYC,MAAM,YAAYV,SAAUA,GAAxD,aAGJ,SAAKK,UAAWC,IAAOK,eACnB,SAAKN,UAAWC,IAAOM,cACnB,EAAC,IAAD,CAAWC,OAAQxC,KAAKH,QAASmC,UAAS,GAAKC,IAAOQ,eAAkBC,gBAAc,EAACC,KAAMrD,EAAMI,aAC/F,EAAC,IAAD,CAAQkD,KAAK,SAAb,cACA,EAAC,IAAD,CAAQA,KAAK,eAAb,WACA,EAAC,IAAD,CAAQA,KAAK,cAAb,eACA,EAAC,IAAD,CAAQA,KAAK,eAAb,gBACA,EAAC,IAAD,CAAQA,KAAK,eAAb,gBAIZ,EAAC,IAAD,CAAgBC,KAAOpD,M,GA1EKqD,c,mwCCNvBC,E,oJACjBzD,MAAQ,CACJ0D,MAAO,I,EAEXC,IAAMC,sB,2HACN5C,kBAAA,WAAmB,WAGXN,KAAKiD,IAAIE,SACTvB,MAAMC,KAAK7B,KAAKiD,IAAIE,QAAQC,UAAUC,SAAQ,SAAAC,GAC1CA,EAAIC,QAAU,SAAC/C,GAAD,OAAO,EAAKgD,gBAAgBhD,IAC1C8C,EAAIG,SAAW,SAACjD,GAAD,OAAO,EAAKgD,gBAAgBhD,Q,EAIvDgD,gBAAA,SAAgBhD,GACZ,IAAMwC,EAAQhD,KAAKV,MAAM0D,MAEzB,GADAA,EAAMxC,EAAIE,OAAOkC,MAAQpC,EAAIE,OAAOsC,MAChCxC,EAAIE,OAAOgD,aAAa,QAA5B,CACA,OAAQlD,EAAIE,OAAOS,MACf,IAAK,SACD6B,EAAMxC,EAAIE,OAAOkC,MAAQe,OAAOnD,EAAIE,OAAOsC,OAC3C,MACJ,IAAK,OACDA,EAAMxC,EAAIE,OAAOkC,MAAQ,IAAIgB,KAAKpD,EAAIE,OAAOsC,OAC7C,MACJ,QACIA,EAAMxC,EAAIE,OAAOkC,MAAQpC,EAAIE,OAAOsC,MAG5ChD,KAAKK,SAAS,CACV2C,UAEDhD,KAAKC,MAAM4D,mBACV7D,KAAKC,MAAM4D,kBAAkBb,K,EAMrCc,SAAA,SAAStD,GACLA,EAAIuD,iBACJ,IAAMf,EAAQ,GACdpB,MAAMC,KAAK7B,KAAKiD,IAAIE,QAAQC,UACvBC,SAAQ,SAAAC,GACFA,EAAIV,OACHI,EAAMM,EAAIV,MAAQU,EAAIN,UAGlChD,KAAKC,MAAM6D,SAASd,I,EAExBtB,OAAA,SAAOzB,GAAc,WACbD,KAAKC,MAAM6D,WACX9D,KAAK8D,SAAW9D,KAAK8D,SAAW9D,KAAK8D,UAEzC,IAAME,EAAW,EAAH,KAAQ/D,GAAR,IAAe6D,SAAU,SAACtD,GAAU,EAAKsD,SAAStD,MAChE,OAAO,cAAUwD,EAAV,CAAoBf,IAAKjD,KAAKiD,MAChChD,EAAMgE,W,yBApBf,WACI,OAAOjE,KAAKV,MAAM0D,W,8BAtCQF,e,yCCAlCoB,EAAOC,QAAU,CAAC,eAAiB,wBAAwB,aAAe,sBAAsB,WAAa,oBAAoB,aAAe,sBAAsB,aAAe,sBAAsB,WAAa,oBAAoB,YAAc,qBAAqB,UAAY,mBAAmB,gBAAkB,yBAAyB,WAAa,oBAAoB,QAAU,iBAAiB,WAAa,oBAAoB,MAAQ,eAAe,aAAe,sBAAsB,QAAU,iBAAiB,cAAgB,uBAAuB,SAAW,oB,wECD1iBhE,E,kCACJC,YAAb,2CACI,SAAM,CACF,CACIiB,UAAW,EACXC,OAAQ,EACRC,WAAY,IACZC,YAAa,IACbC,SAAU,U,uBCP1ByC,EAAOC,QAAU,CAAC,UAAY,mBAAmB,eAAiB,wBAAwB,aAAe,wB,84CCE5FC,EAAb,YACI,WAAYnE,GAAO,aACf,sBACKA,MAAQA,EAEb,EAAKX,MAAQ,CACT+E,UAAWpE,EAAM0C,MAAQ,GACzB2B,QAAS,GACTC,WAAW,EACXC,aAAc,IAAIC,KAElBxE,EAAMuC,SAAQ,EAAKA,OAASvC,EAAMuC,OAAO1C,KAAb,OAC5BG,EAAMyE,UAAS,EAAKA,QAAUzE,EAAMyE,SAGxC,EAAKC,aAEL,EAAKC,aAAgB,EAAK3E,MAAM2E,aAA2B,EAAK3E,MAAM2E,aAAvB,aAC/C,EAAKL,UAAY,EAAKA,UAAUzE,KAAf,MAjBF,EADvB,W,MAAA,uBAwBI6E,WAAA,WAEI,IADA,IACA,MADiB/C,MAAMiD,QAAQ7E,KAAKC,MAAMgE,UAAYjE,KAAKC,MAAMgE,SAAW,CAACjE,KAAKC,MAAMgE,aACxF,aAA8B,KAAnBa,EAAmB,QACtBA,EAAM3D,MAAQ4D,IAClB/E,KAAKV,MAAMgF,QAAQQ,EAAM7E,MAAM2C,MAAQkC,KA5BnD,EAgCIE,mBAAA,SAAmBrF,GACf,IAAM6E,EAAexE,KAAKV,MAAMkF,aAE5BA,EAAaS,IAAItF,GACjBK,KAAKkF,YAAYvF,GAEjBK,KAAKmF,UAAUxF,GAEnBK,KAAKK,SAAS,CACVmE,aAAcA,KAzC1B,EA8CIhC,OAAA,SAAOxB,EAAKC,EAAOtB,GAAS,WAClByF,EAAapF,KAAKC,MAAMoF,eAAiB,sBAAKpE,EAAQ,GAAU,KAChEyB,EAAiB1C,KAAKC,MAAMyC,eAC9B,sBAAI,qBAAOtB,SAAU,WAAG,OAAI,EAAK4D,mBAAmBrF,IAAUwB,KAAK,WAAWR,QAASX,KAAKV,MAAMkF,aAAaS,IAAItF,MACjH,KACN,MAAO,CACH,kBAAIuB,QAAS,SAAAV,GAAG,OAAI,EAAKoE,aAAapE,EAAKb,EAASsB,KAC/CyB,EACA0C,EACAE,OAAOC,QAAQvE,GAAKwE,KAAI,SAACC,GACtB,IAAOC,EAAmBD,EAA1B,GAAeE,EAAWF,EAA1B,GACA,MAAO,CACH,kBAAIzD,UAAW0D,GAASC,EAAQC,yBA1DxD,EAqEIC,eAAA,SAAelG,GACNK,KAAKC,MAAM4F,gBAChB7F,KAAKC,MAAM4F,eAAelG,EAASK,OAvE3C,EA0EImF,UAAA,SAAUnE,GACN,IAAIhB,KAAKV,MAAMkF,aAAaS,IAAIjE,GAAhC,CACA,IAAIwD,EAAexE,KAAKV,MAAMkF,aAC9BA,EAAasB,IAAI9E,GACjBhB,KAAKK,SAAS,CAAEmE,iBAChBxE,KAAK6F,eAAe7E,KA/E5B,EAkFIkE,YAAA,SAAYlE,GACR,GAAKhB,KAAKV,MAAMkF,aAAaS,IAAIjE,GAAjC,CACA,IAAIwD,EAAexE,KAAKV,MAAMkF,aAC9BA,EAAa3D,OAAOG,GACpBhB,KAAKK,SAAS,CAAEmE,iBAChBxE,KAAK6F,eAAe,QAvF5B,EA2FItB,UAAA,SAAUvB,GACN,IAAIwB,EAAe,IAAIuB,QAEnB/C,GACAhD,KAAKV,MAAM+E,UAAUhB,SAAQ,SAAArC,GACzBgF,GAAKC,WAAWH,IAAI9E,MAI5BhB,KAAKK,SAAS,CACVkE,UAAWvB,EACXwB,aAAcA,KAtG1B,EA4GI0B,kBAAA,SAAkB5G,GAAO,WAGrB,MAAO,CAFgBU,KAAKC,MAAMyC,eAAiB,sBAAI,qBAAOvB,KAAK,WAAWQ,UAAQ,EAACP,SAAU,SAAAZ,GAAG,OAAI,EAAK+D,UAAU/D,EAAIE,OAAOC,aAAoB,KACnIX,KAAKC,MAAMoF,eAAiB,2BAAa,KACxBC,OAAOa,KAAK7G,EAAMgF,SAASkB,KAAI,SAAAY,GAC/D,IAAMC,EAAS/G,EAAMgF,QAAQ8B,GAC7B,OAAO,kBAAIlF,QAAS,WAAW,OAAOmF,EAAOpG,MAAMqG,SAAW,EAAKC,OAAOH,GAAc,OAASC,EAAOpG,MAAMgE,eAjH1H,EAqHIuC,gBAAA,SAAgB7D,GAAM,WACZ8D,EAAcnB,OAAOa,KAAKnG,KAAKV,MAAMgF,SAC3C,OAAO3B,EAAK6C,KAAI,SAACxE,EAAKC,GAElB,IADA,IACA,EADMtB,EAAU,GAChB,IAAgB8G,KAAhB,aAA6B,KAApBC,EAAoB,QACzB/G,EAAQ+G,GAAO1F,EAAI0F,GAGvB,OADqB,EAAKlE,OAAO7C,EAASsB,EAAOD,OA5H7D,EAqII2F,gBAAA,SAAgBhE,GACZ,IAAM2B,EAAUtE,KAAKV,MAAMgF,QACrBsC,EAAS,GAFG,WAGPF,GACP,IACMG,EADOvC,EAAQoC,GACEzG,MAAM4G,UAC7B,GAAIA,EAAW,CACX,IAAMtH,EAAcoD,EAAK6C,KAAI,SAAAsB,GAGzB,OADGC,MAAMpD,OADQmD,EAAEJ,OACSI,EAAEJ,GAAO,GAC9BI,KAGX,GAA2B,IAAvBvH,EAAYwC,OAAc,CAC1B,IAAMiB,EAAQzD,EAAYyH,QAAO,SAACC,EAAKC,GACnC,OAAOL,EAAUlD,OAAOsD,GAAMtD,OAAOuD,EAAQR,OAC9C,GACHE,EAAOF,GAAO1D,KAd1B,IAAK,IAAM0D,KAAOpC,EAAS,EAAhBoC,GAmBX,OADY1G,KAAK0E,QAAW1E,KAAK0E,QAAQkC,GAAW,IA1J5D,EA8JIL,OAAA,aA9JJ,EAqKIY,cAAA,SAAcC,EAAkBC,QAAa,IAA/BD,MAAc,IAGxB,IAFA,IAEA,EADIE,GAAQ,EACZ,IAFqBF,EAAmB9B,OAAOxD,OAAOsF,GAAnB,MAEnC,aAAuC,KAA5BG,EAA4B,QAC7BC,SAAmBD,EACzB,GAAiB,WAAbC,GAAuC,UAAbA,GAAsC,UAAbA,EAKnD,OAAOxH,KAAKmH,cAAcI,EAAaF,GAHvC,GADAC,EAAQC,EAAYE,WAAWC,cAAcC,SAASN,GAC3C,MAMnB,OAAOC,GAlLf,EAqLIM,OAAA,SAAOP,GAAa,WACVrE,EAAQqE,EAAYK,cACb,IAAT1E,IACJhD,KAAKV,MAAMqD,KAAO3C,KAAKV,MAAMqD,KAAKkF,QAAO,SAAAC,GACrC,OAAO,EAAKX,cAAcW,EAAY9E,EAAM+E,aAzLxD,EA6LIrG,OAAA,SAAOzB,EAAOX,GACVA,EAAMqD,KAAO1C,EAAM0C,KACnB,IAAQX,EAAgC/B,EAAhC+B,UAAR,EAAwC/B,EAArB+H,YAEnB,OADAhI,KAAK4H,YADL,MAAiC,GAAjC,GAGI,uBACI,qBAAO5F,UAAWA,GACd,yBACI,sBAAKhC,KAAKkG,kBAAkB5G,KAEhC,yBACKU,KAAKwG,gBAAgBxG,KAAKV,MAAMqD,OAErC,yBACK3C,KAAK2G,gBAAgBrH,EAAMqD,U,EA3MpD,G,EAAA,yBAiEI,WACI,OAAO3C,KAAKV,MAAMkF,kB,2BAlE1B,GAA+B1B,aAmNlBiC,EAAb,YACI,WAAY9E,EAAOX,GAAO,OACtB,YAAMW,EAAOX,IADS,KAD9B,0BAIIoC,OAAA,SAAOzB,GACH,OACI,uBAAMA,EAAMgE,WANxB,GAA4BG,I,2OC3Kb6D,I,YApCX,aAAa,aACT,sBACK3I,MAAQ,CACT4I,YAAY,GAHP,E,2GAMbxG,OAAA,cAAiC,WAAdwG,EAAc,EAAdA,WAEf,OADAlI,KAAKV,MAAM4I,WADkB,EAAxBrF,KAGD,uBACI,YAAC,IAAD,CAAQsF,QAAS,aAAWC,kBAAgB,0BAA0BvF,KAAMqF,GACxE,YAAC,IAAD,CAAaG,GAAG,0BAA0BF,QAAS,cAChD,mBAAKnG,UAAWC,IAAOqG,cACvB,mCACC,YAAC,IAAD,CAAQC,WAAS,EAACrH,QAAS,kBAAI,EAAKb,SAAS,CAAC6H,YAAY,KAAS7F,MAAM,WAAzE,WAMJ,YAAC,IAAD,CAAemG,UAAQ,GACnB,YAAC,IAAD,CAAMC,YAAU,EAACC,aAAa,OAC1B,YAAC,IAAD,CAAW1G,UAAWC,IAAO0G,eAAgBC,WAAS,EAACP,GAAG,mBAAmBQ,MAAM,aAAazG,QAAQ,WACxG,YAAC,IAAD,CAAWJ,UAAWC,IAAO0G,eAAgBC,WAAS,EAACP,GAAG,aAAalH,KAAK,QAAQ0H,MAAM,UAAUzG,QAAQ,WAC5G,YAAC,IAAD,CAAWJ,UAAWC,IAAO0G,eAAgBC,WAAS,EAACP,GAAG,sBAAsBQ,MAAM,cAAczG,QAAQ,WAC5G,YAAC,IAAD,CAAWJ,UAAWC,IAAO0G,eAAgBC,WAAS,EAACP,GAAG,gBAAgBQ,MAAM,YAAYzG,QAAQ,WACpG,YAAC,IAAD,CAAQA,QAAQ,YAAYJ,UAAWC,IAAO6G,UAAWP,WAAS,EAACpH,KAAK,SAASD,QAAS,aAAUmB,MAAM,WAA1G,a,GA3BCS","file":"route-payments.chunk.5846f.js","sourcesContent":["import { Component } from \"preact\";\nimport styles from \"./style.css\";\nimport Button from '@material-ui/core/Button';\nimport { ColDef, DataTable } from '../../components/data-table';\nimport AddEditPayment from \"../../components/add-edit-payment\";\nimport PaymentModel from \"../../model/payment\";\n\nexport default class PaymentAdminUI extends Component {\n    constructor() {\n        super();\n        this.state = {\n            checkedData: new Map(),\n            openDialog: false,\n            membersList: [],\n            rowData: undefined\n        }\n        this._rowDef = this._rowDef.bind(this);\n    }\n\n    async getMembers() {\n        this.props.isLoading(true);\n        const membersList = await PaymentModel.paymentList();\n        this.props.isLoading(false);\n        this.setState({ membersList })\n    }\n\n    componentDidMount() {\n        this.getMembers()\n    }\n\n    _onCheckbox(evt, rowData) {\n        const memberId = rowData.memberId;\n        const checked = evt.target.checked;\n        const checkedData = this.state.checkedData;\n        if (checked) checkedData.set(memberId, rowData);\n        else checkedData.delete(memberId);\n        this.setState({ checkedData });\n    }\n\n    _onRowClick(evt, rowData) {\n        if (evt.target.tagName == \"INPUT\") {\n            this.setState({ openDialog: false, rowData: undefined });\n            return;\n        };\n        this.setState({ openDialog: true, rowData });\n\n    }\n    _rowDef(row, index, rowData) {\n        return <tr onClick={evt => this._onRowClick(evt, rowData)}>\n            <td>\n                <input type=\"checkbox\" onChange={evt => this._onCheckbox(evt, rowData)} />\n            </td>\n            <td>{rowData.paymentId}</td>\n            <td>{rowData.billId}</td>\n            <td>{rowData.amountPaid}</td>\n            <td>{rowData.totalAmount}</td>\n            <td>{rowData.premisId}</td>\n        </tr>\n    }\n    render({ }, state) {\n        const openDialog = state.openDialog;\n        const checkedData = Array.from(state.checkedData.values());\n        const disabled = checkedData.length == 0 ? true : false;\n        return (\n            <div className={styles.memberAdminContainer}>\n                <div className={styles.btnsContainer}>\n                    <Button onClick={_ => this.setState({ openDialog: true })} variant=\"contained\" color=\"primary\"> Add payment </Button>\n                    <Button variant=\"contained\" color=\"secondary\" disabled={disabled}> Delete </Button>\n\n                </div>\n                <div className={styles.tableContiner}>\n                    <div className={styles.tableSection}>\n                        <DataTable rowDef={this._rowDef} className={`${styles.tableContainer}`} showCheckBoxes data={state.membersList}>\n                            <ColDef name=\"names\" >Payment ID</ColDef>\n                            <ColDef name=\"memberNames\" >Bill ID</ColDef>\n                            <ColDef name=\"amountPaid\" >Amount paid</ColDef>\n                            <ColDef name=\"totalAmount\" >total amount</ColDef>\n                            <ColDef name=\"memberEmail\" >premis Id</ColDef>\n                        </DataTable>\n                    </div>\n                </div>\n                <AddEditPayment open={(openDialog)} />\n            </div>\n\n        )\n    }\n}","import { Component, createRef } from \"preact\";\r\nexport default class Form extends Component {\r\n    state = {\r\n        value: {}\r\n    };\r\n    ref = createRef();\r\n    componentDidMount(){\r\n        // const onLine = window.navigator.onLine;\r\n        // if (!onLine) return alert(\"There is no internet connection.\");\r\n        if (this.ref.current){\r\n            Array.from(this.ref.current.elements).forEach(elt=>{\r\n                elt.oninput = (evt)=>this.updateFormValue(evt);\r\n                elt.onchange = (evt)=>this.updateFormValue(evt);\r\n            })\r\n        }\r\n    }\r\n    updateFormValue(evt) {\r\n        const value = this.state.value;\r\n        value[evt.target.name] = evt.target.value;\r\n        if(!evt.target.getAttribute(\"name\")) return;\r\n        switch (evt.target.type) {\r\n            case \"number\":\r\n                value[evt.target.name] = Number(evt.target.value);\r\n                break;\r\n            case \"date\":\r\n                value[evt.target.name] = new Date(evt.target.value);\r\n                break;\r\n            default:\r\n                value[evt.target.name] = evt.target.value;\r\n                break;\r\n        }\r\n        this.setState({\r\n            value\r\n        });\r\n        if(this.props.onUpdateFormValue){\r\n            this.props.onUpdateFormValue(value);\r\n        }\r\n    }\r\n    get value() {\r\n        return this.state.value\r\n    }\r\n    onSubmit(evt) {\r\n        evt.preventDefault();\r\n        const value = {};\r\n        Array.from(this.ref.current.elements)\r\n            .forEach(elt=>{\r\n                if(elt.name) {\r\n                    value[elt.name] = elt.value;\r\n                }\r\n            })\r\n        this.props.onSubmit(value);\r\n    }\r\n    render(props, state) {\r\n        if (this.props.onSubmit) {\r\n            this.onSubmit = this.onSubmit = this.onSubmit\r\n        }\r\n        const propsObj = { ...props, onSubmit: (evt) => { this.onSubmit(evt) } };\r\n        return <form {...propsObj} ref={this.ref}>\r\n            {props.children}\r\n        </form>\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"tableContainer__pVY2x\",\"aliasPointer\":\"aliasPointer__3i6Ac\",\"tableTitle\":\"tableTitle__2Zmci\",\"tableSection\":\"tableSection__1qeUH\",\"rowCaptalize\":\"rowCaptalize__34gDH\",\"tdCheckbox\":\"tdCheckbox__GiExU\",\"tableHeader\":\"tableHeader__3vrL7\",\"rightSide\":\"rightSide__uByak\",\"input_Container\":\"input_Container__4L0VM\",\"hiddingBtn\":\"hiddingBtn__3NPPC\",\"showBtn\":\"showBtn__1owXX\",\"loadingBar\":\"loadingBar__3yQfd\",\"field\":\"field__pGWV1\",\"totalSection\":\"totalSection__31BXi\",\"hasTabs\":\"hasTabs__2hf4Y\",\"btnsContainer\":\"btnsContainer__3Os1R\",\"leftSide\":\"leftSide__2b0Si\"};","export default class PaymentModel{\n    static async paymentList(){\n        return[\n            {\n                paymentId: 1,\n                billId: 2,\n                amountPaid: 100,\n                totalAmount: 100,\n                premisId: 12\n            }\n        ]\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"submitBtn__3SccR\",\"textfieldInput\":\"textfieldInput__WgbCr\",\"dialogHeader\":\"dialogHeader__RS9TD\"};","import { h, Component } from \"preact\";\n\n\nexport class DataTable extends Component {\n    constructor(props) {\n        super();\n        this.props = props;\n\n        this.state = {\n            tableData: props.data || [],\n            columns: {},\n            selectAll: false,\n            selectedRows: new Set()\n        };\n        if (props.rowDef) this.rowDef = props.rowDef.bind(this);\n        if (props.footDef) this.footDef = props.footDef;\n\n\n        this.getColumns();\n\n        this.onRowClicked = !this.props.onRowClicked ? () => { } : this.props.onRowClicked;\n        this.selectAll = this.selectAll.bind(this);\n\n    }\n    get selectedRows() {\n        return this.state.selectedRows;\n    }\n    getColumns() {\n        const children = Array.isArray(this.props.children) ? this.props.children : [this.props.children];\n        for (const child of children) {\n            if (child.type != ColDef) continue;\n            this.state.columns[child.props.name] = child;\n        }\n    }\n\n    onRowSectionChange(rowData) {\n        const selectedRows = this.state.selectedRows;\n\n        if (selectedRows.has(rowData)) {\n            this.deSelectRow(rowData);\n        } else {\n            this.selectRow(rowData);\n        }\n        this.setState({\n            selectedRows: selectedRows\n        });\n\n    }\n\n    rowDef(row, index, rowData) {\n        const rowNumbers = this.props.showRowNumbers ? <td>{index + 1}</td> : null;\n        const showCheckBoxes = this.props.showCheckBoxes ?\n            <td><input onChange={evt => this.onRowSectionChange(rowData)} type=\"checkbox\" checked={this.state.selectedRows.has(rowData)} /></td>\n            : null;\n        return [\n            <tr onClick={evt => this.onRowClicked(evt, rowData, index)}>\n                {showCheckBoxes}\n                {rowNumbers}\n                {Object.entries(row).map((td) => {\n                    const [tdName, tdValue] = td;\n                    return [\n                        <td className={tdName}>{tdValue.toLocaleString()}</td>\n                    ]\n                })}\n            </tr>\n        ];\n    }\n\n    get selectedRows() {\n        return this.state.selectedRows;\n    }\n\n    onRowSelection(rowData) {\n        if (!this.props.onRowSelection) return;\n        this.props.onRowSelection(rowData, this);\n    }\n\n    selectRow(row) {\n        if (this.state.selectedRows.has(row)) return;\n        let selectedRows = this.state.selectedRows;\n        selectedRows.add(row);\n        this.setState({ selectedRows });\n        this.onRowSelection(row);\n    }\n\n    deSelectRow(row) {\n        if (!this.state.selectedRows.has(row)) return;\n        let selectedRows = this.state.selectedRows;\n        selectedRows.delete(row);\n        this.setState({ selectedRows });\n        this.onRowSelection(null);\n\n    }\n\n    selectAll(value) {\n        let selectedRows = new WeakSet()\n\n        if (value) {\n            this.state.tableData.forEach(row => {\n                se > lectedRows.add(row)\n            });\n        }\n\n        this.setState({\n            selectAll: value,\n            selectedRows: selectedRows\n        });\n\n\n    }\n\n    renderTableHeader(state) {\n        const showCheckBoxes = this.props.showCheckBoxes ? <th><input type=\"checkbox\" disabled onChange={evt => this.selectAll(evt.target.checked)} /></th> : null;\n        const rowNumbers = this.props.showRowNumbers ? <th>#</th> : null;\n        return [showCheckBoxes, rowNumbers, Object.keys(state.columns).map(columnName => {\n            const column = state.columns[columnName];\n            return <th onClick={(evt) => { return column.props.sortable ? this.sortBy(columnName) : null }}>{column.props.children}</th>\n        })];\n    }\n\n    renderTableBody(data) {\n        const allowedRows = Object.keys(this.state.columns);\n        return data.map((row, index) => {\n            const rowData = {};\n            for (let col of allowedRows) {\n                rowData[col] = row[col];\n            }\n            const rowComponent = this.rowDef(rowData, index, row);\n            return rowComponent;\n        });\n    }\n\n      /**\n     * \n     * @param {[{}]} data \n     */\n    renderTableFoot(data) {\n        const columns = this.state.columns;\n        const result = {};\n        for (const col in columns) {\n            const func = columns[col];\n            const calculate = func.props.calculate;\n            if (calculate) {\n                const checkedData = data.map(d=>{\n                    const forCheck = d[col];\n                    if(isNaN(Number(forCheck))) d[col] = 0;\n                    return d\n                    \n                });\n                if (checkedData.length !== 0) {\n                    const value = checkedData.reduce((acc, currVal) => {\n                        return calculate(Number(acc), Number(currVal[col]));\n                    }, 0);\n                    result[col] = value;\n                }\n            }\n        }\n        const row = this.footDef ? (this.footDef(result)) : \"\";\n        return row;\n    }\n\n    sortBy(columnName) { }\n\n    /**\n     * @param {any} Object \n     * @param {string} queryString \n     * @returns {boolean}\n     */\n    _searchObject(seachObject = {}, queryString) {\n        const searchArray = !seachObject ? [] : Object.values(seachObject);\n        let found = false;\n        for (const objectValue of searchArray) {\n            const valueType = typeof objectValue;\n            if (valueType == \"boolean\" || valueType == \"string\" || valueType == \"number\") {\n                found = objectValue.toString().toLowerCase().includes(queryString);\n                if (found) break;\n            }\n            else {\n                return this._searchObject(objectValue, queryString);\n            }\n        }\n        return found;\n    }\n\n    search(queryString) {\n        const value = queryString.toLowerCase();\n        if (value == \"\") return;\n        this.state.data = this.state.data.filter(singleData => {\n            return this._searchObject(singleData, value.trim());\n        });\n    }\n\n    render(props, state) {\n        state.data = props.data;\n        const { className, searchValue = \"\" } = props;\n        this.search(searchValue);\n        return (\n            <div>\n                <table className={className} >\n                    <thead>\n                        <tr>{this.renderTableHeader(state)}</tr>\n                    </thead>\n                    <tbody>\n                        {this.renderTableBody(this.state.data)}\n                    </tbody>\n                    <tfoot>\n                        {this.renderTableFoot(state.data)}\n                    </tfoot>\n                </table>\n            </div>\n        );\n    }\n\n}\nexport class ColDef extends DataTable {\n    constructor(props, state) {\n        super(props, state);\n    }\n    render(props, state) {\n        return (\n            <div>{props.children}</div>\n        );\n    }\n}","import { Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography } from '@material-ui/core';\nimport { h, Component } from 'preact';\nimport Button from '@material-ui/core/Button';\nimport Form from '../form';\nimport styles from \"./style.css\";\n\nclass AddEditPayment extends Component {\n    constructor(){\n        super();\n        this.state = {\n            showDialog: false\n        }\n    }\n    render({ open }, { showDialog }) {\n        this.state.showDialog = open;\n        return (\n            <div>\n                <Dialog onClose={() => { }} aria-labelledby=\"customized-dialog-title\" open={showDialog}>\n                    <DialogTitle id=\"customized-dialog-title\" onClose={() => { }}>\n                       <div className={styles.dialogHeader}>\n                       <span>Payment</span>\n                        <Button autoFocus onClick={()=>this.setState({showDialog: false})} color=\"primary\">\n                            Close\n                        </Button>\n                       </div>\n\n                    </DialogTitle>\n                    <DialogContent dividers>\n                        <Form noValidate autoComplete=\"off\">\n                            <TextField className={styles.textfieldInput} fullWidth id=\"fillwewedd-basic\" label=\"Payment ID\" variant=\"filled\" />\n                            <TextField className={styles.textfieldInput} fullWidth id=\"djfkdwedaf\" type=\"email\" label=\"Bill ID\" variant=\"filled\" />\n                            <TextField className={styles.textfieldInput} fullWidth id=\"fiqtqlleadfdd-basic\" label=\"Amount Paid\" variant=\"filled\" />\n                            <TextField className={styles.textfieldInput} fullWidth id=\"filleqed-adfa\" label=\"Premis ID\" variant=\"filled\" />\n                            <Button variant=\"contained\" className={styles.submitBtn} autoFocus type=\"submit\" onClick={_ => { }} color=\"primary\">Save</Button>\n                        </Form>\n\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default AddEditPayment;"],"sourceRoot":""}