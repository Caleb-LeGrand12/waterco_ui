{"version":3,"sources":["webpack:///./components/form/index.js","webpack:///./components/add-edit-member/index.js","webpack:///./components/add-edit-member/style.css","webpack:///./model/member/index.js","webpack:///./routes/members/index.js","webpack:///./components/data-table/index.js","webpack:///./routes/members/components/admin-ui/index.js","webpack:///./routes/members/components/admin-ui/style.css"],"names":["Form","Component","state","value","ref","createRef","componentDidMount","this","current","Array","from","elements","forEach","elt","oninput","evt","updateFormValue","onchange","target","name","getAttribute","type","Number","Date","setState","props","onUpdateFormValue","onSubmit","preventDefault","render","propsObj","children","AddEditMember","constructor","super","showDialog","open","onClose","aria-labelledby","id","className","styles","dialogHeader","autoFocus","onClick","color","dividers","noValidate","autoComplete","textfieldInput","fullWidth","label","variant","submitBtn","_","module","exports","MembersModel","memberId","firstName","lastName","email","Members","isLoading","status","DataTable","tableData","data","columns","selectAll","selectedRows","Set","rowDef","bind","footDef","getColumns","onRowClicked","isArray","child","ColDef","onRowSectionChange","rowData","has","deSelectRow","selectRow","row","index","rowNumbers","showRowNumbers","showCheckBoxes","onChange","checked","Object","entries","map","td","tdName","tdValue","toLocaleString","onRowSelection","add","delete","WeakSet","se","lectedRows","renderTableHeader","disabled","keys","columnName","column","sortable","sortBy","renderTableBody","allowedRows","col","renderTableFoot","result","calculate","checkedData","d","isNaN","length","reduce","acc","currVal","_searchObject","seachObject","queryString","searchArray","values","found","objectValue","valueType","toString","toLowerCase","includes","search","filter","singleData","trim","searchValue","MemberAdminUI","Map","openDialog","membersList","undefined","_rowDef","getAllMembers","getMembers","_onCheckbox","set","_onRowClick","tagName","names","memberAdminContainer","btnsContainer","tableContiner","tableSection","tableContainer"],"mappings":"kiCACe,MAAMA,UAAaC,YAAU,mCACxCC,MAAQ,CACJC,MAAO,IAF6B,KAIxCC,IAAMC,sBACNC,oBAGQC,KAAKH,IAAII,SACTC,MAAMC,KAAKH,KAAKH,IAAII,QAAQG,UAAUC,QAAQC,IAC1CA,EAAIC,QAAWC,GAAMR,KAAKS,gBAAgBD,GAC1CF,EAAII,SAAYF,GAAMR,KAAKS,gBAAgBD,KAIvDC,gBAAgBD,GACZ,MAAMZ,EAAQI,KAAKL,MAAMC,MAEzB,GADAA,EAAMY,EAAIG,OAAOC,MAAQJ,EAAIG,OAAOf,MAChCY,EAAIG,OAAOE,aAAa,QAA5B,CACA,OAAQL,EAAIG,OAAOG,MACf,IAAK,SACDlB,EAAMY,EAAIG,OAAOC,MAAQG,OAAOP,EAAIG,OAAOf,OAC3C,MACJ,IAAK,OACDA,EAAMY,EAAIG,OAAOC,MAAQ,IAAII,KAAKR,EAAIG,OAAOf,OAC7C,MACJ,QACIA,EAAMY,EAAIG,OAAOC,MAAQJ,EAAIG,OAAOf,MAG5CI,KAAKiB,SAAS,CACVrB,UAEDI,KAAKkB,MAAMC,mBACVnB,KAAKkB,MAAMC,kBAAkBvB,IAG5B,YACL,OAAOI,KAAKL,MAAMC,MAEtBwB,SAASZ,GACLA,EAAIa,iBACJ,MAAMzB,EAAQ,GACdM,MAAMC,KAAKH,KAAKH,IAAII,QAAQG,UACvBC,QAAQC,IACFA,EAAIM,OACHhB,EAAMU,EAAIM,MAAQN,EAAIV,SAGlCI,KAAKkB,MAAME,SAASxB,GAExB0B,OAAOJ,EAAOvB,GACNK,KAAKkB,MAAME,WACXpB,KAAKoB,SAAWpB,KAAKoB,SAAWpB,KAAKoB,UAEzC,MAAMG,EAAW,EAAH,KAAQL,GAAR,IAAeE,SAAWZ,IAAUR,KAAKoB,SAASZ,MAChE,OAAO,cAAUe,EAAV,CAAoB1B,IAAKG,KAAKH,MAChCqB,EAAMM,c,4DC1DnB,6GA4CeC,IAtCf,cAA4B/B,YACxBgC,cACIC,QACA3B,KAAKL,MAAQ,CACTiC,YAAY,GAGpBN,QAAO,KAAEO,IAAQ,WAAED,IAEf,OADA5B,KAAKL,MAAMiC,WAAaC,EAEpB,uBACI,YAAC,IAAD,CAAQC,QAAS,OAAWC,kBAAgB,0BAA0BF,KAAMD,GACxE,YAAC,IAAD,CAAaI,GAAG,0BAA0BF,QAAS,QAChD,mBAAKG,UAAWC,IAAOC,cACvB,kCACC,YAAC,IAAD,CAAQC,WAAS,EAACC,QAAS,IAAIrC,KAAKiB,SAAS,CAACW,YAAY,IAASU,MAAM,WAAzE,WAMJ,YAAC,IAAD,CAAeC,UAAQ,GACnB,YAAC,IAAD,CAAMC,YAAU,EAACC,aAAa,OAC1B,YAAC,IAAD,CAAWR,UAAWC,IAAOQ,eAAgBC,WAAS,EAACX,GAAG,gBAAiBpB,KAAK,YAAYgC,MAAM,aAAaC,QAAQ,WACvH,YAAC,IAAD,CAAWZ,UAAWC,IAAOQ,eAAgBC,WAAS,EAACX,GAAG,gBAAgBpB,KAAK,WAAYgC,MAAM,YAAYC,QAAQ,WACrH,YAAC,IAAD,CAAWZ,UAAWC,IAAOQ,eAAgBC,WAAS,EAACX,GAAG,aAAalB,KAAK,QAAQF,KAAK,QAAQgC,MAAM,QAAQC,QAAQ,WACvH,YAAC,IAAD,CAAWZ,UAAWC,IAAOQ,eAAgBC,WAAS,EAACX,GAAG,mBAAmBpB,KAAK,WAAWgC,MAAM,WAAWC,QAAQ,WAEtH,YAAC,IAAD,CAAQA,QAAQ,YAAYZ,UAAWC,IAAOY,UAAWV,WAAS,EAACtB,KAAK,SAASuB,QAASU,OAAUT,MAAM,WAA1G,e,mBCjC5BU,EAAOC,QAAU,CAAC,UAAY,mBAAmB,eAAiB,wBAAwB,aAAe,wB,kCCDzG,kCAAe,MAAMC,EACS,6BACtB,MAAO,CACH,CACIC,SAAU,EACVC,UAAW,OACXC,SAAU,MACVC,MAAO,uB,kCCPvB,2EAIe,MAAMC,UAAgB7D,YACjCgC,cACIC,QAGJL,SACI,OACI,uBACI,YAAC,IAAD,CAAekC,UAAWC,GAAQzD,KAAKkB,MAAMsC,UAAUC,S,kCCZvE,oFAGO,MAAMC,UAAkBhE,YAC3BgC,YAAYR,GACRS,QACA3B,KAAKkB,MAAQA,EAEblB,KAAKL,MAAQ,CACTgE,UAAWzC,EAAM0C,MAAQ,GACzBC,QAAS,GACTC,WAAW,EACXC,aAAc,IAAIC,KAElB9C,EAAM+C,SAAQjE,KAAKiE,OAAS/C,EAAM+C,OAAOC,KAAKlE,OAC9CkB,EAAMiD,UAASnE,KAAKmE,QAAUjD,EAAMiD,SAGxCnE,KAAKoE,aAELpE,KAAKqE,aAAgBrE,KAAKkB,MAAMmD,aAA2BrE,KAAKkB,MAAMmD,aAAvB,OAC/CrE,KAAK8D,UAAY9D,KAAK8D,UAAUI,KAAKlE,MAGzB,mBACZ,OAAOA,KAAKL,MAAMoE,aAEtBK,aACI,MAAM5C,EAAWtB,MAAMoE,QAAQtE,KAAKkB,MAAMM,UAAYxB,KAAKkB,MAAMM,SAAW,CAACxB,KAAKkB,MAAMM,UACxF,IAAK,MAAM+C,KAAS/C,EACZ+C,EAAMzD,MAAQ0D,IAClBxE,KAAKL,MAAMkE,QAAQU,EAAMrD,MAAMN,MAAQ2D,GAI/CE,mBAAmBC,GACf,MAAMX,EAAe/D,KAAKL,MAAMoE,aAE5BA,EAAaY,IAAID,GACjB1E,KAAK4E,YAAYF,GAEjB1E,KAAK6E,UAAUH,GAEnB1E,KAAKiB,SAAS,CACV8C,aAAcA,IAKtBE,OAAOa,EAAKC,EAAOL,GACf,MAAMM,EAAahF,KAAKkB,MAAM+D,eAAiB,sBAAKF,EAAQ,GAAU,KAChEG,EAAiBlF,KAAKkB,MAAMgE,eAC9B,sBAAI,qBAAOC,SAAU3E,IAAOR,KAAKyE,mBAAmBC,GAAU5D,KAAK,WAAWsE,QAASpF,KAAKL,MAAMoE,aAAaY,IAAID,MACjH,KACN,MAAO,CACH,kBAAIrC,QAAS7B,GAAOR,KAAKqE,aAAa7D,EAAKkE,EAASK,IAC/CG,EACAF,EACAK,OAAOC,QAAQR,GAAKS,IAAKC,IACtB,MAAOC,EAAQC,GAAWF,EAC1B,MAAO,CACH,kBAAIvD,UAAWwD,GAASC,EAAQC,uBAOpC,mBACZ,OAAO3F,KAAKL,MAAMoE,aAGtB6B,eAAelB,GACN1E,KAAKkB,MAAM0E,gBAChB5F,KAAKkB,MAAM0E,eAAelB,EAAS1E,MAGvC6E,UAAUC,GACN,GAAI9E,KAAKL,MAAMoE,aAAaY,IAAIG,GAAM,OACtC,IAAIf,EAAe/D,KAAKL,MAAMoE,aAC9BA,EAAa8B,IAAIf,GACjB9E,KAAKiB,SAAS,CAAE8C,iBAChB/D,KAAK4F,eAAed,GAGxBF,YAAYE,GACR,IAAK9E,KAAKL,MAAMoE,aAAaY,IAAIG,GAAM,OACvC,IAAIf,EAAe/D,KAAKL,MAAMoE,aAC9BA,EAAa+B,OAAOhB,GACpB9E,KAAKiB,SAAS,CAAE8C,iBAChB/D,KAAK4F,eAAe,MAIxB9B,UAAUlE,GACN,IAAImE,EAAe,IAAIgC,QAEnBnG,GACAI,KAAKL,MAAMgE,UAAUtD,QAAQyE,IACzBkB,GAAKC,WAAWJ,IAAIf,KAI5B9E,KAAKiB,SAAS,CACV6C,UAAWlE,EACXmE,aAAcA,IAMtBmC,kBAAkBvG,GAGd,MAAO,CAFgBK,KAAKkB,MAAMgE,eAAiB,sBAAI,qBAAOpE,KAAK,WAAWqF,UAAQ,EAAChB,SAAU3E,GAAOR,KAAK8D,UAAUtD,EAAIG,OAAOyE,YAAoB,KACnIpF,KAAKkB,MAAM+D,eAAiB,2BAAa,KACxBI,OAAOe,KAAKzG,EAAMkE,SAAS0B,IAAIc,IAC/D,MAAMC,EAAS3G,EAAMkE,QAAQwC,GAC7B,OAAO,kBAAIhE,QAAU7B,IAAiB8F,EAAOpF,MAAMqF,SAAWvG,KAAKwG,OAAOH,GAAc,MAASC,EAAOpF,MAAMM,aAItHiF,gBAAgB7C,GACZ,MAAM8C,EAAcrB,OAAOe,KAAKpG,KAAKL,MAAMkE,SAC3C,OAAOD,EAAK2B,IAAI,CAACT,EAAKC,KAClB,MAAML,EAAU,GAChB,IAAK,IAAIiC,KAAOD,EACZhC,EAAQiC,GAAO7B,EAAI6B,GAGvB,OADqB3G,KAAKiE,OAAOS,EAASK,EAAOD,KASzD8B,gBAAgBhD,GACZ,MAAMC,EAAU7D,KAAKL,MAAMkE,QACrBgD,EAAS,GACf,IAAK,MAAMF,KAAO9C,EAAS,CACvB,MACMiD,EADOjD,EAAQ8C,GACEzF,MAAM4F,UAC7B,GAAIA,EAAW,CACX,MAAMC,EAAcnD,EAAK2B,IAAIyB,IAEtBC,MAAMlG,OADQiG,EAAEL,OACSK,EAAEL,GAAO,GAC9BK,IAGX,GAA2B,IAAvBD,EAAYG,OAAc,CAC1B,MAAMtH,EAAQmH,EAAYI,OAAO,CAACC,EAAKC,IAC5BP,EAAU/F,OAAOqG,GAAMrG,OAAOsG,EAAQV,KAC9C,GACHE,EAAOF,GAAO/G,IAK1B,OADYI,KAAKmE,QAAWnE,KAAKmE,QAAQ0C,GAAW,GAIxDL,OAAOH,IAOPiB,cAAcC,EAAc,GAAIC,GAC5B,MAAMC,EAAeF,EAAmBlC,OAAOqC,OAAOH,GAAnB,GACnC,IAAII,GAAQ,EACZ,IAAK,MAAMC,KAAeH,EAAa,CACnC,MAAMI,SAAmBD,EACzB,GAAiB,WAAbC,GAAuC,UAAbA,GAAsC,UAAbA,EAKnD,OAAO7H,KAAKsH,cAAcM,EAAaJ,GAHvC,GADAG,EAAQC,EAAYE,WAAWC,cAAcC,SAASR,GAClDG,EAAO,MAMnB,OAAOA,EAGXM,OAAOT,GACH,MAAM5H,EAAQ4H,EAAYO,cACb,IAATnI,IACJI,KAAKL,MAAMiE,KAAO5D,KAAKL,MAAMiE,KAAKsE,OAAOC,GAC9BnI,KAAKsH,cAAca,EAAYvI,EAAMwI,UAIpD9G,OAAOJ,EAAOvB,GACVA,EAAMiE,KAAO1C,EAAM0C,KACnB,MAAM,UAAE3B,EAAF,YAAaoG,EAAc,IAAOnH,EAExC,OADAlB,KAAKiI,OAAOI,GAER,uBACI,qBAAOpG,UAAWA,GACd,yBACI,sBAAKjC,KAAKkG,kBAAkBvG,KAEhC,yBACKK,KAAKyG,gBAAgBzG,KAAKL,MAAMiE,OAErC,yBACK5D,KAAK4G,gBAAgBjH,EAAMiE,UAQ7C,MAAMY,UAAed,EACxBhC,YAAYR,EAAOvB,GACfgC,MAAMT,EAAOvB,GAEjB2B,OAAOJ,EAAOvB,GACV,OACI,uBAAMuB,EAAMM,a,mCC5NxB,mIAOe,MAAM8G,UAAsB5I,YACvCgC,cACIC,QACA3B,KAAKL,MAAQ,CACToH,YAAa,IAAIwB,IACjBC,YAAY,EACZC,YAAa,GACb/D,aAASgE,GAEb1I,KAAK2I,QAAU3I,KAAK2I,QAAQzE,KAAKlE,MAGrB,mBACZA,KAAKkB,MAAMsC,WAAU,GACrB,MAAMiF,QAAoBvF,IAAa0F,gBACvC5I,KAAKkB,MAAMsC,WAAU,GACrBxD,KAAKiB,SAAS,CAAEwH,gBAGpB1I,oBACIC,KAAK6I,aAGTC,YAAYtI,EAAKkE,GACb,MAAMvB,EAAWuB,EAAQvB,SAEnB4D,EAAc/G,KAAKL,MAAMoH,YADfvG,EAAIG,OAAOyE,QAEd2B,EAAYgC,IAAI5F,EAAUuB,GAClCqC,EAAYjB,OAAO3C,GACxBnD,KAAKiB,SAAS,CAAE8F,gBAGpBiC,YAAYxI,EAAKkE,GAKb1E,KAAKiB,SAJqB,SAAtBT,EAAIG,OAAOsI,QAID,CAAET,YAAY,EAAM9D,WAHhB,CAAE8D,YAAY,EAAO9D,aAASgE,IAMpDC,QAAQ7D,EAAKC,EAAOL,GAChB,MAAMwE,EAAS,GAAExE,EAAQtB,aAAasB,EAAQrB,WAC9C,OAAO,QAAIhB,QAAS7B,GAAOR,KAAKgJ,YAAYxI,EAAKkE,IAC7C,YACI,WAAO5D,KAAK,WAAWqE,SAAU3E,GAAOR,KAAK8I,YAAYtI,EAAKkE,MAElE,YAAKA,EAAQvB,UACb,YAAK+F,GACL,YAAKxE,EAAQpB,QAGrBhC,UAAY3B,GACR,MAAM6I,EAAa7I,EAAM6I,WAEnBrC,EAAiC,GADnBjG,MAAMC,KAAKR,EAAMoH,YAAYW,UACpBR,OAC7B,OACI,SAAKjF,UAAWC,IAAOiH,sBACnB,SAAKlH,UAAWC,IAAOkH,eACnB,EAAC,IAAD,CAAQ/G,QAASU,IAAK/C,KAAKiB,SAAS,CAAEuH,YAAY,IAAS3F,QAAQ,YAAYP,MAAM,WAArF,gBACA,EAAC,IAAD,CAAQO,QAAQ,YAAYP,MAAM,YAAY6D,SAAUA,GAAxD,aAGJ,SAAKlE,UAAWC,IAAOmH,eACnB,SAAKpH,UAAWC,IAAOoH,cACnB,EAAC,IAAD,CAAWrF,OAAQjE,KAAK2I,QAAS1G,UAAY,GAAEC,IAAOqH,eAAkBrE,gBAAc,EAACtB,KAAMjE,EAAM8I,aAC/F,EAAC,IAAD,CAAQ7H,KAAK,SAAb,aACA,EAAC,IAAD,CAAQA,KAAK,eAAb,gBACA,EAAC,IAAD,CAAQA,KAAK,eAAb,aAIZ,EAAC,IAAD,CAAeiB,KAAO2G,S,2CC7EtCxF,EAAOC,QAAU,CAAC,eAAiB,wBAAwB,aAAe,sBAAsB,WAAa,oBAAoB,aAAe,sBAAsB,aAAe,sBAAsB,WAAa,oBAAoB,YAAc,qBAAqB,UAAY,mBAAmB,gBAAkB,yBAAyB,WAAa,oBAAoB,QAAU,iBAAiB,WAAa,oBAAoB,MAAQ,eAAe,aAAe,sBAAsB,QAAU,iBAAiB,cAAgB,uBAAuB,SAAW","file":"route-members.chunk.a865f.esm.js","sourcesContent":["import { Component, createRef } from \"preact\";\r\nexport default class Form extends Component {\r\n    state = {\r\n        value: {}\r\n    };\r\n    ref = createRef();\r\n    componentDidMount(){\r\n        // const onLine = window.navigator.onLine;\r\n        // if (!onLine) return alert(\"There is no internet connection.\");\r\n        if (this.ref.current){\r\n            Array.from(this.ref.current.elements).forEach(elt=>{\r\n                elt.oninput = (evt)=>this.updateFormValue(evt);\r\n                elt.onchange = (evt)=>this.updateFormValue(evt);\r\n            })\r\n        }\r\n    }\r\n    updateFormValue(evt) {\r\n        const value = this.state.value;\r\n        value[evt.target.name] = evt.target.value;\r\n        if(!evt.target.getAttribute(\"name\")) return;\r\n        switch (evt.target.type) {\r\n            case \"number\":\r\n                value[evt.target.name] = Number(evt.target.value);\r\n                break;\r\n            case \"date\":\r\n                value[evt.target.name] = new Date(evt.target.value);\r\n                break;\r\n            default:\r\n                value[evt.target.name] = evt.target.value;\r\n                break;\r\n        }\r\n        this.setState({\r\n            value\r\n        });\r\n        if(this.props.onUpdateFormValue){\r\n            this.props.onUpdateFormValue(value);\r\n        }\r\n    }\r\n    get value() {\r\n        return this.state.value\r\n    }\r\n    onSubmit(evt) {\r\n        evt.preventDefault();\r\n        const value = {};\r\n        Array.from(this.ref.current.elements)\r\n            .forEach(elt=>{\r\n                if(elt.name) {\r\n                    value[elt.name] = elt.value;\r\n                }\r\n            })\r\n        this.props.onSubmit(value);\r\n    }\r\n    render(props, state) {\r\n        if (this.props.onSubmit) {\r\n            this.onSubmit = this.onSubmit = this.onSubmit\r\n        }\r\n        const propsObj = { ...props, onSubmit: (evt) => { this.onSubmit(evt) } };\r\n        return <form {...propsObj} ref={this.ref}>\r\n            {props.children}\r\n        </form>\r\n    }\r\n}","import { Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography } from '@material-ui/core';\nimport { h, Component } from 'preact';\nimport Button from '@material-ui/core/Button';\nimport Form from '../form';\nimport styles from \"./style.css\";\n\nclass AddEditMember extends Component {\n    constructor(){\n        super();\n        this.state = {\n            showDialog: false\n        }\n    }\n    render({ open }, { showDialog }) {\n        this.state.showDialog = open;\n        return (\n            <div>\n                <Dialog onClose={() => { }} aria-labelledby=\"customized-dialog-title\" open={showDialog}>\n                    <DialogTitle id=\"customized-dialog-title\" onClose={() => { }}>\n                       <div className={styles.dialogHeader}>\n                       <span>Member</span>\n                        <Button autoFocus onClick={()=>this.setState({showDialog: false})} color=\"primary\">\n                            Close\n                        </Button>\n                       </div>\n\n                    </DialogTitle>\n                    <DialogContent dividers>\n                        <Form noValidate autoComplete=\"off\">\n                            <TextField className={styles.textfieldInput} fullWidth id=\"filledd-basic\"  name=\"firstName\" label=\"First name\" variant=\"filled\" />\n                            <TextField className={styles.textfieldInput} fullWidth id=\"filledd-basic\" name=\"lastName\"  label=\"Last name\" variant=\"filled\" />\n                            <TextField className={styles.textfieldInput} fullWidth id=\"djfkdajdaf\" type=\"email\" name=\"email\" label=\"email\" variant=\"filled\" />\n                            <TextField className={styles.textfieldInput} fullWidth id=\"filleadfdd-basic\" name=\"passowrd\" label=\"Password\" variant=\"filled\" />\n\n                            <Button variant=\"contained\" className={styles.submitBtn} autoFocus type=\"submit\" onClick={_ => { }} color=\"primary\">Save</Button>\n                        </Form>\n\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default AddEditMember;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"submitBtn__3TmW9\",\"textfieldInput\":\"textfieldInput__dxpAX\",\"dialogHeader\":\"dialogHeader__2wV_A\"};","export default class MembersModel {\n    static async getAllMembers(){\n        return [\n            {\n                memberId: 1,\n                firstName: \"John\",\n                lastName: \"Doe\",\n                email: \"jodoe@gmail.com\"\n            }\n        ]\n    }\n}","import {h, Component} from \"preact\";\nimport MemberAdminUI from \"./components/admin-ui\";\n// import styles from \"./style.scss\";\n\nexport default class Members extends Component{\n    constructor(){\n        super();\n    }\n\n    render(){\n        return(\n            <div>\n                <MemberAdminUI isLoading={status=>this.props.isLoading(status)} />\n            </div>\n        )\n    }\n}\n","import { h, Component } from \"preact\";\n\n\nexport class DataTable extends Component {\n    constructor(props) {\n        super();\n        this.props = props;\n\n        this.state = {\n            tableData: props.data || [],\n            columns: {},\n            selectAll: false,\n            selectedRows: new Set()\n        };\n        if (props.rowDef) this.rowDef = props.rowDef.bind(this);\n        if (props.footDef) this.footDef = props.footDef;\n\n\n        this.getColumns();\n\n        this.onRowClicked = !this.props.onRowClicked ? () => { } : this.props.onRowClicked;\n        this.selectAll = this.selectAll.bind(this);\n\n    }\n    get selectedRows() {\n        return this.state.selectedRows;\n    }\n    getColumns() {\n        const children = Array.isArray(this.props.children) ? this.props.children : [this.props.children];\n        for (const child of children) {\n            if (child.type != ColDef) continue;\n            this.state.columns[child.props.name] = child;\n        }\n    }\n\n    onRowSectionChange(rowData) {\n        const selectedRows = this.state.selectedRows;\n\n        if (selectedRows.has(rowData)) {\n            this.deSelectRow(rowData);\n        } else {\n            this.selectRow(rowData);\n        }\n        this.setState({\n            selectedRows: selectedRows\n        });\n\n    }\n\n    rowDef(row, index, rowData) {\n        const rowNumbers = this.props.showRowNumbers ? <td>{index + 1}</td> : null;\n        const showCheckBoxes = this.props.showCheckBoxes ?\n            <td><input onChange={evt => this.onRowSectionChange(rowData)} type=\"checkbox\" checked={this.state.selectedRows.has(rowData)} /></td>\n            : null;\n        return [\n            <tr onClick={evt => this.onRowClicked(evt, rowData, index)}>\n                {showCheckBoxes}\n                {rowNumbers}\n                {Object.entries(row).map((td) => {\n                    const [tdName, tdValue] = td;\n                    return [\n                        <td className={tdName}>{tdValue.toLocaleString()}</td>\n                    ]\n                })}\n            </tr>\n        ];\n    }\n\n    get selectedRows() {\n        return this.state.selectedRows;\n    }\n\n    onRowSelection(rowData) {\n        if (!this.props.onRowSelection) return;\n        this.props.onRowSelection(rowData, this);\n    }\n\n    selectRow(row) {\n        if (this.state.selectedRows.has(row)) return;\n        let selectedRows = this.state.selectedRows;\n        selectedRows.add(row);\n        this.setState({ selectedRows });\n        this.onRowSelection(row);\n    }\n\n    deSelectRow(row) {\n        if (!this.state.selectedRows.has(row)) return;\n        let selectedRows = this.state.selectedRows;\n        selectedRows.delete(row);\n        this.setState({ selectedRows });\n        this.onRowSelection(null);\n\n    }\n\n    selectAll(value) {\n        let selectedRows = new WeakSet()\n\n        if (value) {\n            this.state.tableData.forEach(row => {\n                se > lectedRows.add(row)\n            });\n        }\n\n        this.setState({\n            selectAll: value,\n            selectedRows: selectedRows\n        });\n\n\n    }\n\n    renderTableHeader(state) {\n        const showCheckBoxes = this.props.showCheckBoxes ? <th><input type=\"checkbox\" disabled onChange={evt => this.selectAll(evt.target.checked)} /></th> : null;\n        const rowNumbers = this.props.showRowNumbers ? <th>#</th> : null;\n        return [showCheckBoxes, rowNumbers, Object.keys(state.columns).map(columnName => {\n            const column = state.columns[columnName];\n            return <th onClick={(evt) => { return column.props.sortable ? this.sortBy(columnName) : null }}>{column.props.children}</th>\n        })];\n    }\n\n    renderTableBody(data) {\n        const allowedRows = Object.keys(this.state.columns);\n        return data.map((row, index) => {\n            const rowData = {};\n            for (let col of allowedRows) {\n                rowData[col] = row[col];\n            }\n            const rowComponent = this.rowDef(rowData, index, row);\n            return rowComponent;\n        });\n    }\n\n      /**\n     * \n     * @param {[{}]} data \n     */\n    renderTableFoot(data) {\n        const columns = this.state.columns;\n        const result = {};\n        for (const col in columns) {\n            const func = columns[col];\n            const calculate = func.props.calculate;\n            if (calculate) {\n                const checkedData = data.map(d=>{\n                    const forCheck = d[col];\n                    if(isNaN(Number(forCheck))) d[col] = 0;\n                    return d\n                    \n                });\n                if (checkedData.length !== 0) {\n                    const value = checkedData.reduce((acc, currVal) => {\n                        return calculate(Number(acc), Number(currVal[col]));\n                    }, 0);\n                    result[col] = value;\n                }\n            }\n        }\n        const row = this.footDef ? (this.footDef(result)) : \"\";\n        return row;\n    }\n\n    sortBy(columnName) { }\n\n    /**\n     * @param {any} Object \n     * @param {string} queryString \n     * @returns {boolean}\n     */\n    _searchObject(seachObject = {}, queryString) {\n        const searchArray = !seachObject ? [] : Object.values(seachObject);\n        let found = false;\n        for (const objectValue of searchArray) {\n            const valueType = typeof objectValue;\n            if (valueType == \"boolean\" || valueType == \"string\" || valueType == \"number\") {\n                found = objectValue.toString().toLowerCase().includes(queryString);\n                if (found) break;\n            }\n            else {\n                return this._searchObject(objectValue, queryString);\n            }\n        }\n        return found;\n    }\n\n    search(queryString) {\n        const value = queryString.toLowerCase();\n        if (value == \"\") return;\n        this.state.data = this.state.data.filter(singleData => {\n            return this._searchObject(singleData, value.trim());\n        });\n    }\n\n    render(props, state) {\n        state.data = props.data;\n        const { className, searchValue = \"\" } = props;\n        this.search(searchValue);\n        return (\n            <div>\n                <table className={className} >\n                    <thead>\n                        <tr>{this.renderTableHeader(state)}</tr>\n                    </thead>\n                    <tbody>\n                        {this.renderTableBody(this.state.data)}\n                    </tbody>\n                    <tfoot>\n                        {this.renderTableFoot(state.data)}\n                    </tfoot>\n                </table>\n            </div>\n        );\n    }\n\n}\nexport class ColDef extends DataTable {\n    constructor(props, state) {\n        super(props, state);\n    }\n    render(props, state) {\n        return (\n            <div>{props.children}</div>\n        );\n    }\n}","import { Component } from \"preact\";\nimport styles from \"./style.css\";\nimport Button from '@material-ui/core/Button';\nimport { ColDef, DataTable } from '../../../../components/data-table/index';\nimport AddEditMember from \"../../../../components/add-edit-member\";\nimport MembersModel from '../../../../model/member';\n\nexport default class MemberAdminUI extends Component {\n    constructor() {\n        super();\n        this.state = {\n            checkedData: new Map(),\n            openDialog: false,\n            membersList: [],\n            rowData: undefined\n        }\n        this._rowDef = this._rowDef.bind(this);\n    }\n\n    async getMembers() {\n        this.props.isLoading(true);\n        const membersList = await MembersModel.getAllMembers();\n        this.props.isLoading(false);\n        this.setState({ membersList })\n    }\n\n    componentDidMount() {\n        this.getMembers()\n    }\n\n    _onCheckbox(evt, rowData) {\n        const memberId = rowData.memberId;\n        const checked = evt.target.checked;\n        const checkedData = this.state.checkedData;\n        if (checked) checkedData.set(memberId, rowData);\n        else checkedData.delete(memberId);\n        this.setState({ checkedData });\n    }\n\n    _onRowClick(evt, rowData) {\n        if (evt.target.tagName == \"INPUT\") {\n            this.setState({ openDialog: false, rowData: undefined });\n            return;\n        };\n        this.setState({ openDialog: true, rowData });\n\n    }\n    _rowDef(row, index, rowData) {\n        const names = `${rowData.firstName} ${rowData.lastName}`;\n        return <tr onClick={evt => this._onRowClick(evt, rowData)}>\n            <td>\n                <input type=\"checkbox\" onChange={evt => this._onCheckbox(evt, rowData)} />\n            </td>\n            <td>{rowData.memberId}</td>\n            <td>{names}</td>\n            <td>{rowData.email}</td>\n        </tr>\n    }\n    render({ }, state) {\n        const openDialog = state.openDialog;\n        const checkedData = Array.from(state.checkedData.values());\n        const disabled = checkedData.length == 0 ? true : false;\n        return (\n            <div className={styles.memberAdminContainer}>\n                <div className={styles.btnsContainer}>\n                    <Button onClick={_ => this.setState({ openDialog: true })} variant=\"contained\" color=\"primary\"> Add member </Button>\n                    <Button variant=\"contained\" color=\"secondary\" disabled={disabled}> Delete </Button>\n\n                </div>\n                <div className={styles.tableContiner}>\n                    <div className={styles.tableSection}>\n                        <DataTable rowDef={this._rowDef} className={`${styles.tableContainer}`} showCheckBoxes data={state.membersList}>\n                            <ColDef name=\"names\" >Member ID</ColDef>\n                            <ColDef name=\"memberNames\" >Member names</ColDef>\n                            <ColDef name=\"memberEmail\" >Email </ColDef>\n                        </DataTable>\n                    </div>\n                </div>\n                <AddEditMember open={(openDialog)} />\n            </div>\n\n        )\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"tableContainer__1n8wi\",\"aliasPointer\":\"aliasPointer__3vKr_\",\"tableTitle\":\"tableTitle__ME5Y1\",\"tableSection\":\"tableSection__2Bjfv\",\"rowCaptalize\":\"rowCaptalize__2dYaB\",\"tdCheckbox\":\"tdCheckbox__2SQ44\",\"tableHeader\":\"tableHeader__14BQP\",\"rightSide\":\"rightSide__2AUh6\",\"input_Container\":\"input_Container__1XpaG\",\"hiddingBtn\":\"hiddingBtn__VifKz\",\"showBtn\":\"showBtn__34s7V\",\"loadingBar\":\"loadingBar__3RHN-\",\"field\":\"field__t8nWc\",\"totalSection\":\"totalSection__vzzBU\",\"hasTabs\":\"hasTabs__2sHfO\",\"btnsContainer\":\"btnsContainer__3rvG8\",\"leftSide\":\"leftSide__3NZ7m\"};"],"sourceRoot":""}