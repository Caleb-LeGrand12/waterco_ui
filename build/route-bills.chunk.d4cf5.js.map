{"version":3,"sources":["webpack:///./components/form/index.js","webpack:///./components/add-edit-bill/style.css","webpack:///./routes/bills/index.js","webpack:///./model/bill/index.js","webpack:///./model/payment/index.js","webpack:///./components/data-table/index.js","webpack:///./components/add-edit-bill/index.js","webpack:///./routes/bills/style.css"],"names":["Form","state","value","ref","createRef","componentDidMount","this","current","Array","from","elements","forEach","elt","oninput","evt","updateFormValue","onchange","target","name","getAttribute","type","Number","Date","setState","props","onUpdateFormValue","onSubmit","preventDefault","render","propsObj","children","Component","module","exports","BillUI","checkedData","Map","openDialog","membersList","rowData","undefined","_rowDef","bind","getMembers","isLoading","BillModel","getListOfBills","_onCheckbox","memberId","checked","set","delete","_onRowClick","tagName","row","index","onClick","onChange","billId","premiseId","disabled","values","length","className","styles","memberAdminContainer","btnsContainer","variant","color","tableContiner","tableSection","rowDef","tableContainer","showCheckBoxes","data","open","PaymentModel","paymentList","paymentId","amountPaid","totalAmount","premisId","DataTable","tableData","columns","selectAll","selectedRows","Set","footDef","getColumns","onRowClicked","isArray","child","ColDef","onRowSectionChange","has","deSelectRow","selectRow","rowNumbers","showRowNumbers","Object","entries","map","td","tdName","tdValue","toLocaleString","onRowSelection","add","WeakSet","se","lectedRows","renderTableHeader","keys","columnName","column","sortable","sortBy","renderTableBody","allowedRows","col","renderTableFoot","result","calculate","d","isNaN","reduce","acc","currVal","_searchObject","seachObject","queryString","found","objectValue","valueType","toString","toLowerCase","includes","search","filter","singleData","trim","searchValue","EditAddBill","showDialog","onClose","aria-labelledby","id","dialogHeader","autoFocus","dividers","noValidate","autoComplete","textfieldInput","fullWidth","label","submitBtn"],"mappings":"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","file":"route-bills.chunk.d4cf5.js","sourcesContent":["import { Component, createRef } from \"preact\";\r\nexport default class Form extends Component {\r\n    state = {\r\n        value: {}\r\n    };\r\n    ref = createRef();\r\n    componentDidMount(){\r\n        // const onLine = window.navigator.onLine;\r\n        // if (!onLine) return alert(\"There is no internet connection.\");\r\n        if (this.ref.current){\r\n            Array.from(this.ref.current.elements).forEach(elt=>{\r\n                elt.oninput = (evt)=>this.updateFormValue(evt);\r\n                elt.onchange = (evt)=>this.updateFormValue(evt);\r\n            })\r\n        }\r\n    }\r\n    updateFormValue(evt) {\r\n        const value = this.state.value;\r\n        value[evt.target.name] = evt.target.value;\r\n        if(!evt.target.getAttribute(\"name\")) return;\r\n        switch (evt.target.type) {\r\n            case \"number\":\r\n                value[evt.target.name] = Number(evt.target.value);\r\n                break;\r\n            case \"date\":\r\n                value[evt.target.name] = new Date(evt.target.value);\r\n                break;\r\n            default:\r\n                value[evt.target.name] = evt.target.value;\r\n                break;\r\n        }\r\n        this.setState({\r\n            value\r\n        });\r\n        if(this.props.onUpdateFormValue){\r\n            this.props.onUpdateFormValue(value);\r\n        }\r\n    }\r\n    get value() {\r\n        return this.state.value\r\n    }\r\n    onSubmit(evt) {\r\n        evt.preventDefault();\r\n        const value = {};\r\n        Array.from(this.ref.current.elements)\r\n            .forEach(elt=>{\r\n                if(elt.name) {\r\n                    value[elt.name] = elt.value;\r\n                }\r\n            })\r\n        this.props.onSubmit(value);\r\n    }\r\n    render(props, state) {\r\n        if (this.props.onSubmit) {\r\n            this.onSubmit = this.onSubmit = this.onSubmit\r\n        }\r\n        const propsObj = { ...props, onSubmit: (evt) => { this.onSubmit(evt) } };\r\n        return <form {...propsObj} ref={this.ref}>\r\n            {props.children}\r\n        </form>\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"submitBtn__2YGad\",\"textfieldInput\":\"textfieldInput__6vgk8\",\"dialogHeader\":\"dialogHeader__SqpmD\"};","import { Component } from \"preact\";\nimport styles from \"./style.css\";\nimport Button from '@material-ui/core/Button';\nimport { ColDef, DataTable } from '../../components/data-table';\nimport AddEditBill from \"../../components/add-edit-bill\";\nimport PaymentModel from \"../../model/payment\";\nimport BillModel from \"../../model/bill\";\n\nexport default class BillUI extends Component {\n    constructor() {\n        super();\n        this.state = {\n            checkedData: new Map(),\n            openDialog: false,\n            membersList: [],\n            rowData: undefined\n        }\n        this._rowDef = this._rowDef.bind(this);\n    }\n\n    async getMembers() {\n        this.props.isLoading(true);\n        const membersList = await BillModel.getListOfBills();\n        this.props.isLoading(false);\n        this.setState({ membersList })\n    }\n\n    componentDidMount() {\n        this.getMembers()\n    }\n\n    _onCheckbox(evt, rowData) {\n        const memberId = rowData.memberId;\n        const checked = evt.target.checked;\n        const checkedData = this.state.checkedData;\n        if (checked) checkedData.set(memberId, rowData);\n        else checkedData.delete(memberId);\n        this.setState({ checkedData });\n    }\n\n    _onRowClick(evt, rowData) {\n        if (evt.target.tagName == \"INPUT\") {\n            this.setState({ openDialog: false, rowData: undefined });\n            return;\n        };\n        this.setState({ openDialog: true, rowData });\n\n    }\n    _rowDef(row, index, rowData) {\n        return <tr onClick={evt => this._onRowClick(evt, rowData)}>\n            <td>\n                <input type=\"checkbox\" onChange={evt => this._onCheckbox(evt, rowData)} />\n            </td>\n            <td>{rowData.billId}</td>\n            <td>{rowData.premiseId}</td>\n            <td>{rowData.memberId}</td>\n        </tr>\n    }\n    render({ }, state) {\n        const openDialog = state.openDialog;\n        const checkedData = Array.from(state.checkedData.values());\n        const disabled = checkedData.length == 0 ? true : false;\n        return (\n            <div className={styles.memberAdminContainer}>\n                <div className={styles.btnsContainer}>\n                    <Button onClick={_ => this.setState({ openDialog: true })} variant=\"contained\" color=\"primary\"> Add bill </Button>\n                    <Button variant=\"contained\" color=\"secondary\" disabled={disabled}> Delete </Button>\n\n                </div>\n                <div className={styles.tableContiner}>\n                    <div className={styles.tableSection}>\n                        <DataTable rowDef={this._rowDef} className={`${styles.tableContainer}`} showCheckBoxes data={state.membersList}>\n                            <ColDef name=\"billID\" >Bill ID</ColDef>\n                            <ColDef name=\"premiseID\" >Premise ID</ColDef>\n                            <ColDef name=\"memberID\" >Member ID</ColDef>\n                        </DataTable>\n                    </div>\n                </div>\n                <AddEditBill open={(openDialog)} />\n            </div>\n\n        )\n    }\n}","export default class BillModel{\n    static async getListOfBills(){\n        return [\n            {\n                billId: 1,\n                premiseId: 43,\n                memberId: 21\n            }\n        ]\n    }\n}","export default class PaymentModel{\n    static async paymentList(){\n        return[\n            {\n                paymentId: 1,\n                billId: 2,\n                amountPaid: 100,\n                totalAmount: 100,\n                premisId: 12\n            }\n        ]\n    }\n}","import { h, Component } from \"preact\";\n\n\nexport class DataTable extends Component {\n    constructor(props) {\n        super();\n        this.props = props;\n\n        this.state = {\n            tableData: props.data || [],\n            columns: {},\n            selectAll: false,\n            selectedRows: new Set()\n        };\n        if (props.rowDef) this.rowDef = props.rowDef.bind(this);\n        if (props.footDef) this.footDef = props.footDef;\n\n\n        this.getColumns();\n\n        this.onRowClicked = !this.props.onRowClicked ? () => { } : this.props.onRowClicked;\n        this.selectAll = this.selectAll.bind(this);\n\n    }\n    get selectedRows() {\n        return this.state.selectedRows;\n    }\n    getColumns() {\n        const children = Array.isArray(this.props.children) ? this.props.children : [this.props.children];\n        for (const child of children) {\n            if (child.type != ColDef) continue;\n            this.state.columns[child.props.name] = child;\n        }\n    }\n\n    onRowSectionChange(rowData) {\n        const selectedRows = this.state.selectedRows;\n\n        if (selectedRows.has(rowData)) {\n            this.deSelectRow(rowData);\n        } else {\n            this.selectRow(rowData);\n        }\n        this.setState({\n            selectedRows: selectedRows\n        });\n\n    }\n\n    rowDef(row, index, rowData) {\n        const rowNumbers = this.props.showRowNumbers ? <td>{index + 1}</td> : null;\n        const showCheckBoxes = this.props.showCheckBoxes ?\n            <td><input onChange={evt => this.onRowSectionChange(rowData)} type=\"checkbox\" checked={this.state.selectedRows.has(rowData)} /></td>\n            : null;\n        return [\n            <tr onClick={evt => this.onRowClicked(evt, rowData, index)}>\n                {showCheckBoxes}\n                {rowNumbers}\n                {Object.entries(row).map((td) => {\n                    const [tdName, tdValue] = td;\n                    return [\n                        <td className={tdName}>{tdValue.toLocaleString()}</td>\n                    ]\n                })}\n            </tr>\n        ];\n    }\n\n    get selectedRows() {\n        return this.state.selectedRows;\n    }\n\n    onRowSelection(rowData) {\n        if (!this.props.onRowSelection) return;\n        this.props.onRowSelection(rowData, this);\n    }\n\n    selectRow(row) {\n        if (this.state.selectedRows.has(row)) return;\n        let selectedRows = this.state.selectedRows;\n        selectedRows.add(row);\n        this.setState({ selectedRows });\n        this.onRowSelection(row);\n    }\n\n    deSelectRow(row) {\n        if (!this.state.selectedRows.has(row)) return;\n        let selectedRows = this.state.selectedRows;\n        selectedRows.delete(row);\n        this.setState({ selectedRows });\n        this.onRowSelection(null);\n\n    }\n\n    selectAll(value) {\n        let selectedRows = new WeakSet()\n\n        if (value) {\n            this.state.tableData.forEach(row => {\n                se > lectedRows.add(row)\n            });\n        }\n\n        this.setState({\n            selectAll: value,\n            selectedRows: selectedRows\n        });\n\n\n    }\n\n    renderTableHeader(state) {\n        const showCheckBoxes = this.props.showCheckBoxes ? <th><input type=\"checkbox\" disabled onChange={evt => this.selectAll(evt.target.checked)} /></th> : null;\n        const rowNumbers = this.props.showRowNumbers ? <th>#</th> : null;\n        return [showCheckBoxes, rowNumbers, Object.keys(state.columns).map(columnName => {\n            const column = state.columns[columnName];\n            return <th onClick={(evt) => { return column.props.sortable ? this.sortBy(columnName) : null }}>{column.props.children}</th>\n        })];\n    }\n\n    renderTableBody(data) {\n        const allowedRows = Object.keys(this.state.columns);\n        return data.map((row, index) => {\n            const rowData = {};\n            for (let col of allowedRows) {\n                rowData[col] = row[col];\n            }\n            const rowComponent = this.rowDef(rowData, index, row);\n            return rowComponent;\n        });\n    }\n\n      /**\n     * \n     * @param {[{}]} data \n     */\n    renderTableFoot(data) {\n        const columns = this.state.columns;\n        const result = {};\n        for (const col in columns) {\n            const func = columns[col];\n            const calculate = func.props.calculate;\n            if (calculate) {\n                const checkedData = data.map(d=>{\n                    const forCheck = d[col];\n                    if(isNaN(Number(forCheck))) d[col] = 0;\n                    return d\n                    \n                });\n                if (checkedData.length !== 0) {\n                    const value = checkedData.reduce((acc, currVal) => {\n                        return calculate(Number(acc), Number(currVal[col]));\n                    }, 0);\n                    result[col] = value;\n                }\n            }\n        }\n        const row = this.footDef ? (this.footDef(result)) : \"\";\n        return row;\n    }\n\n    sortBy(columnName) { }\n\n    /**\n     * @param {any} Object \n     * @param {string} queryString \n     * @returns {boolean}\n     */\n    _searchObject(seachObject = {}, queryString) {\n        const searchArray = !seachObject ? [] : Object.values(seachObject);\n        let found = false;\n        for (const objectValue of searchArray) {\n            const valueType = typeof objectValue;\n            if (valueType == \"boolean\" || valueType == \"string\" || valueType == \"number\") {\n                found = objectValue.toString().toLowerCase().includes(queryString);\n                if (found) break;\n            }\n            else {\n                return this._searchObject(objectValue, queryString);\n            }\n        }\n        return found;\n    }\n\n    search(queryString) {\n        const value = queryString.toLowerCase();\n        if (value == \"\") return;\n        this.state.data = this.state.data.filter(singleData => {\n            return this._searchObject(singleData, value.trim());\n        });\n    }\n\n    render(props, state) {\n        state.data = props.data;\n        const { className, searchValue = \"\" } = props;\n        this.search(searchValue);\n        return (\n            <div>\n                <table className={className} >\n                    <thead>\n                        <tr>{this.renderTableHeader(state)}</tr>\n                    </thead>\n                    <tbody>\n                        {this.renderTableBody(this.state.data)}\n                    </tbody>\n                    <tfoot>\n                        {this.renderTableFoot(state.data)}\n                    </tfoot>\n                </table>\n            </div>\n        );\n    }\n\n}\nexport class ColDef extends DataTable {\n    constructor(props, state) {\n        super(props, state);\n    }\n    render(props, state) {\n        return (\n            <div>{props.children}</div>\n        );\n    }\n}","import { Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography } from '@material-ui/core';\nimport { h, Component } from 'preact';\nimport Button from '@material-ui/core/Button';\nimport Form from '../form';\nimport styles from \"./style.css\";\n\nclass EditAddBill extends Component {\n    constructor(){\n        super();\n        this.state = {\n            showDialog: false\n        }\n    }\n    render({ open }, { showDialog }) {\n        this.state.showDialog = open;\n        return (\n            <div>\n                <Dialog onClose={() => { }} aria-labelledby=\"customized-dialog-title\" open={showDialog}>\n                    <DialogTitle id=\"customized-dialog-title\" onClose={() => { }}>\n                       <div className={styles.dialogHeader}>\n                       <span>Bill</span>\n                        <Button autoFocus onClick={()=>this.setState({showDialog: false})} color=\"primary\">\n                            Close\n                        </Button>\n                       </div>\n\n                    </DialogTitle>\n                    <DialogContent dividers>\n                        <Form noValidate autoComplete=\"off\">\n                            <TextField className={styles.textfieldInput} fullWidth id=\"fillwewedd-basic\" name=\"billId\" type=\"text\" label=\"Bill ID\" variant=\"filled\" />\n                            <TextField className={styles.textfieldInput} fullWidth id=\"djfkdwedaf\" name=\"premiseID\" type=\"number\" label=\"Premise ID\" variant=\"filled\" />\n                            <TextField className={styles.textfieldInput} fullWidth id=\"fiqtqlleadfdd-basic\"  type=\"number\" name=\"memberID\" label=\"Member ID\" variant=\"filled\" />\n                            <Button variant=\"contained\" className={styles.submitBtn} autoFocus type=\"submit\" onClick={_ => { }} color=\"primary\">Save</Button>\n                        </Form>\n\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default EditAddBill;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"tableContainer__1FQYm\",\"aliasPointer\":\"aliasPointer__jSQYM\",\"tableTitle\":\"tableTitle__1ddsZ\",\"tableSection\":\"tableSection__3k6xY\",\"rowCaptalize\":\"rowCaptalize__LaOMp\",\"tdCheckbox\":\"tdCheckbox__6TPp8\",\"tableHeader\":\"tableHeader__1He32\",\"rightSide\":\"rightSide__2ujXD\",\"input_Container\":\"input_Container__2t4rG\",\"hiddingBtn\":\"hiddingBtn__8BnMz\",\"showBtn\":\"showBtn___hb_o\",\"loadingBar\":\"loadingBar__1KIeG\",\"field\":\"field__61qw9\",\"totalSection\":\"totalSection__3OsMu\",\"hasTabs\":\"hasTabs__mYh8D\",\"btnsContainer\":\"btnsContainer__2lk_k\",\"leftSide\":\"leftSide__2apUr\"};"],"sourceRoot":""}