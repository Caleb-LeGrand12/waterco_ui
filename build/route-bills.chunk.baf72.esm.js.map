{"version":3,"sources":["webpack:///./components/form/index.js","webpack:///./components/add-edit-bill/style.css","webpack:///./routes/bills/index.js","webpack:///./model/bill/index.js","webpack:///./model/payment/index.js","webpack:///./components/data-table/index.js","webpack:///./components/add-edit-bill/index.js","webpack:///./routes/bills/style.css"],"names":["Form","Component","state","value","ref","createRef","componentDidMount","this","current","Array","from","elements","forEach","elt","oninput","evt","updateFormValue","onchange","target","name","getAttribute","type","Number","Date","setState","props","onUpdateFormValue","onSubmit","preventDefault","render","propsObj","children","module","exports","BillUI","constructor","super","checkedData","Map","openDialog","membersList","rowData","undefined","_rowDef","bind","isLoading","BillModel","getListOfBills","getMembers","_onCheckbox","memberId","checked","set","delete","_onRowClick","tagName","row","index","onClick","onChange","billId","premiseId","disabled","values","length","className","styles","memberAdminContainer","btnsContainer","_","variant","color","tableContiner","tableSection","rowDef","tableContainer","showCheckBoxes","data","open","PaymentModel","paymentId","amountPaid","totalAmount","premisId","DataTable","tableData","columns","selectAll","selectedRows","Set","footDef","getColumns","onRowClicked","isArray","child","ColDef","onRowSectionChange","has","deSelectRow","selectRow","rowNumbers","showRowNumbers","Object","entries","map","td","tdName","tdValue","toLocaleString","onRowSelection","add","WeakSet","se","lectedRows","renderTableHeader","keys","columnName","column","sortable","sortBy","renderTableBody","allowedRows","col","renderTableFoot","result","calculate","d","isNaN","reduce","acc","currVal","_searchObject","seachObject","queryString","searchArray","found","objectValue","valueType","toString","toLowerCase","includes","search","filter","singleData","trim","searchValue","EditAddBill","showDialog","onClose","aria-labelledby","id","dialogHeader","autoFocus","dividers","noValidate","autoComplete","textfieldInput","fullWidth","label","submitBtn"],"mappings":"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","file":"route-bills.chunk.baf72.esm.js","sourcesContent":["import { Component, createRef } from \"preact\";\r\nexport default class Form extends Component {\r\n    state = {\r\n        value: {}\r\n    };\r\n    ref = createRef();\r\n    componentDidMount(){\r\n        // const onLine = window.navigator.onLine;\r\n        // if (!onLine) return alert(\"There is no internet connection.\");\r\n        if (this.ref.current){\r\n            Array.from(this.ref.current.elements).forEach(elt=>{\r\n                elt.oninput = (evt)=>this.updateFormValue(evt);\r\n                elt.onchange = (evt)=>this.updateFormValue(evt);\r\n            })\r\n        }\r\n    }\r\n    updateFormValue(evt) {\r\n        const value = this.state.value;\r\n        value[evt.target.name] = evt.target.value;\r\n        if(!evt.target.getAttribute(\"name\")) return;\r\n        switch (evt.target.type) {\r\n            case \"number\":\r\n                value[evt.target.name] = Number(evt.target.value);\r\n                break;\r\n            case \"date\":\r\n                value[evt.target.name] = new Date(evt.target.value);\r\n                break;\r\n            default:\r\n                value[evt.target.name] = evt.target.value;\r\n                break;\r\n        }\r\n        this.setState({\r\n            value\r\n        });\r\n        if(this.props.onUpdateFormValue){\r\n            this.props.onUpdateFormValue(value);\r\n        }\r\n    }\r\n    get value() {\r\n        return this.state.value\r\n    }\r\n    onSubmit(evt) {\r\n        evt.preventDefault();\r\n        const value = {};\r\n        Array.from(this.ref.current.elements)\r\n            .forEach(elt=>{\r\n                if(elt.name) {\r\n                    value[elt.name] = elt.value;\r\n                }\r\n            })\r\n        this.props.onSubmit(value);\r\n    }\r\n    render(props, state) {\r\n        if (this.props.onSubmit) {\r\n            this.onSubmit = this.onSubmit = this.onSubmit\r\n        }\r\n        const propsObj = { ...props, onSubmit: (evt) => { this.onSubmit(evt) } };\r\n        return <form {...propsObj} ref={this.ref}>\r\n            {props.children}\r\n        </form>\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"submitBtn__2YGad\",\"textfieldInput\":\"textfieldInput__6vgk8\",\"dialogHeader\":\"dialogHeader__SqpmD\"};","import { Component } from \"preact\";\nimport styles from \"./style.css\";\nimport Button from '@material-ui/core/Button';\nimport { ColDef, DataTable } from '../../components/data-table';\nimport AddEditBill from \"../../components/add-edit-bill\";\nimport PaymentModel from \"../../model/payment\";\nimport BillModel from \"../../model/bill\";\n\nexport default class BillUI extends Component {\n    constructor() {\n        super();\n        this.state = {\n            checkedData: new Map(),\n            openDialog: false,\n            membersList: [],\n            rowData: undefined\n        }\n        this._rowDef = this._rowDef.bind(this);\n    }\n\n    async getMembers() {\n        this.props.isLoading(true);\n        const membersList = await BillModel.getListOfBills();\n        this.props.isLoading(false);\n        this.setState({ membersList })\n    }\n\n    componentDidMount() {\n        this.getMembers()\n    }\n\n    _onCheckbox(evt, rowData) {\n        const memberId = rowData.memberId;\n        const checked = evt.target.checked;\n        const checkedData = this.state.checkedData;\n        if (checked) checkedData.set(memberId, rowData);\n        else checkedData.delete(memberId);\n        this.setState({ checkedData });\n    }\n\n    _onRowClick(evt, rowData) {\n        if (evt.target.tagName == \"INPUT\") {\n            this.setState({ openDialog: false, rowData: undefined });\n            return;\n        };\n        this.setState({ openDialog: true, rowData });\n\n    }\n    _rowDef(row, index, rowData) {\n        return <tr onClick={evt => this._onRowClick(evt, rowData)}>\n            <td>\n                <input type=\"checkbox\" onChange={evt => this._onCheckbox(evt, rowData)} />\n            </td>\n            <td>{rowData.billId}</td>\n            <td>{rowData.premiseId}</td>\n            <td>{rowData.memberId}</td>\n        </tr>\n    }\n    render({ }, state) {\n        const openDialog = state.openDialog;\n        const checkedData = Array.from(state.checkedData.values());\n        const disabled = checkedData.length == 0 ? true : false;\n        return (\n            <div className={styles.memberAdminContainer}>\n                <div className={styles.btnsContainer}>\n                    <Button onClick={_ => this.setState({ openDialog: true })} variant=\"contained\" color=\"primary\"> Add bill </Button>\n                    <Button variant=\"contained\" color=\"secondary\" disabled={disabled}> Delete </Button>\n\n                </div>\n                <div className={styles.tableContiner}>\n                    <div className={styles.tableSection}>\n                        <DataTable rowDef={this._rowDef} className={`${styles.tableContainer}`} showCheckBoxes data={state.membersList}>\n                            <ColDef name=\"billID\" >Bill ID</ColDef>\n                            <ColDef name=\"premiseID\" >Premise ID</ColDef>\n                            <ColDef name=\"memberID\" >Member ID</ColDef>\n                        </DataTable>\n                    </div>\n                </div>\n                <AddEditBill open={(openDialog)} />\n            </div>\n\n        )\n    }\n}","export default class BillModel{\n    static async getListOfBills(){\n        return [\n            {\n                billId: 1,\n                premiseId: 43,\n                memberId: 21\n            }\n        ]\n    }\n}","export default class PaymentModel{\n    static async paymentList(){\n        return[\n            {\n                paymentId: 1,\n                billId: 2,\n                amountPaid: 100,\n                totalAmount: 100,\n                premisId: 12\n            }\n        ]\n    }\n}","import { h, Component } from \"preact\";\n\n\nexport class DataTable extends Component {\n    constructor(props) {\n        super();\n        this.props = props;\n\n        this.state = {\n            tableData: props.data || [],\n            columns: {},\n            selectAll: false,\n            selectedRows: new Set()\n        };\n        if (props.rowDef) this.rowDef = props.rowDef.bind(this);\n        if (props.footDef) this.footDef = props.footDef;\n\n\n        this.getColumns();\n\n        this.onRowClicked = !this.props.onRowClicked ? () => { } : this.props.onRowClicked;\n        this.selectAll = this.selectAll.bind(this);\n\n    }\n    get selectedRows() {\n        return this.state.selectedRows;\n    }\n    getColumns() {\n        const children = Array.isArray(this.props.children) ? this.props.children : [this.props.children];\n        for (const child of children) {\n            if (child.type != ColDef) continue;\n            this.state.columns[child.props.name] = child;\n        }\n    }\n\n    onRowSectionChange(rowData) {\n        const selectedRows = this.state.selectedRows;\n\n        if (selectedRows.has(rowData)) {\n            this.deSelectRow(rowData);\n        } else {\n            this.selectRow(rowData);\n        }\n        this.setState({\n            selectedRows: selectedRows\n        });\n\n    }\n\n    rowDef(row, index, rowData) {\n        const rowNumbers = this.props.showRowNumbers ? <td>{index + 1}</td> : null;\n        const showCheckBoxes = this.props.showCheckBoxes ?\n            <td><input onChange={evt => this.onRowSectionChange(rowData)} type=\"checkbox\" checked={this.state.selectedRows.has(rowData)} /></td>\n            : null;\n        return [\n            <tr onClick={evt => this.onRowClicked(evt, rowData, index)}>\n                {showCheckBoxes}\n                {rowNumbers}\n                {Object.entries(row).map((td) => {\n                    const [tdName, tdValue] = td;\n                    return [\n                        <td className={tdName}>{tdValue.toLocaleString()}</td>\n                    ]\n                })}\n            </tr>\n        ];\n    }\n\n    get selectedRows() {\n        return this.state.selectedRows;\n    }\n\n    onRowSelection(rowData) {\n        if (!this.props.onRowSelection) return;\n        this.props.onRowSelection(rowData, this);\n    }\n\n    selectRow(row) {\n        if (this.state.selectedRows.has(row)) return;\n        let selectedRows = this.state.selectedRows;\n        selectedRows.add(row);\n        this.setState({ selectedRows });\n        this.onRowSelection(row);\n    }\n\n    deSelectRow(row) {\n        if (!this.state.selectedRows.has(row)) return;\n        let selectedRows = this.state.selectedRows;\n        selectedRows.delete(row);\n        this.setState({ selectedRows });\n        this.onRowSelection(null);\n\n    }\n\n    selectAll(value) {\n        let selectedRows = new WeakSet()\n\n        if (value) {\n            this.state.tableData.forEach(row => {\n                se > lectedRows.add(row)\n            });\n        }\n\n        this.setState({\n            selectAll: value,\n            selectedRows: selectedRows\n        });\n\n\n    }\n\n    renderTableHeader(state) {\n        const showCheckBoxes = this.props.showCheckBoxes ? <th><input type=\"checkbox\" disabled onChange={evt => this.selectAll(evt.target.checked)} /></th> : null;\n        const rowNumbers = this.props.showRowNumbers ? <th>#</th> : null;\n        return [showCheckBoxes, rowNumbers, Object.keys(state.columns).map(columnName => {\n            const column = state.columns[columnName];\n            return <th onClick={(evt) => { return column.props.sortable ? this.sortBy(columnName) : null }}>{column.props.children}</th>\n        })];\n    }\n\n    renderTableBody(data) {\n        const allowedRows = Object.keys(this.state.columns);\n        return data.map((row, index) => {\n            const rowData = {};\n            for (let col of allowedRows) {\n                rowData[col] = row[col];\n            }\n            const rowComponent = this.rowDef(rowData, index, row);\n            return rowComponent;\n        });\n    }\n\n      /**\n     * \n     * @param {[{}]} data \n     */\n    renderTableFoot(data) {\n        const columns = this.state.columns;\n        const result = {};\n        for (const col in columns) {\n            const func = columns[col];\n            const calculate = func.props.calculate;\n            if (calculate) {\n                const checkedData = data.map(d=>{\n                    const forCheck = d[col];\n                    if(isNaN(Number(forCheck))) d[col] = 0;\n                    return d\n                    \n                });\n                if (checkedData.length !== 0) {\n                    const value = checkedData.reduce((acc, currVal) => {\n                        return calculate(Number(acc), Number(currVal[col]));\n                    }, 0);\n                    result[col] = value;\n                }\n            }\n        }\n        const row = this.footDef ? (this.footDef(result)) : \"\";\n        return row;\n    }\n\n    sortBy(columnName) { }\n\n    /**\n     * @param {any} Object \n     * @param {string} queryString \n     * @returns {boolean}\n     */\n    _searchObject(seachObject = {}, queryString) {\n        const searchArray = !seachObject ? [] : Object.values(seachObject);\n        let found = false;\n        for (const objectValue of searchArray) {\n            const valueType = typeof objectValue;\n            if (valueType == \"boolean\" || valueType == \"string\" || valueType == \"number\") {\n                found = objectValue.toString().toLowerCase().includes(queryString);\n                if (found) break;\n            }\n            else {\n                return this._searchObject(objectValue, queryString);\n            }\n        }\n        return found;\n    }\n\n    search(queryString) {\n        const value = queryString.toLowerCase();\n        if (value == \"\") return;\n        this.state.data = this.state.data.filter(singleData => {\n            return this._searchObject(singleData, value.trim());\n        });\n    }\n\n    render(props, state) {\n        state.data = props.data;\n        const { className, searchValue = \"\" } = props;\n        this.search(searchValue);\n        return (\n            <div>\n                <table className={className} >\n                    <thead>\n                        <tr>{this.renderTableHeader(state)}</tr>\n                    </thead>\n                    <tbody>\n                        {this.renderTableBody(this.state.data)}\n                    </tbody>\n                    <tfoot>\n                        {this.renderTableFoot(state.data)}\n                    </tfoot>\n                </table>\n            </div>\n        );\n    }\n\n}\nexport class ColDef extends DataTable {\n    constructor(props, state) {\n        super(props, state);\n    }\n    render(props, state) {\n        return (\n            <div>{props.children}</div>\n        );\n    }\n}","import { Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography } from '@material-ui/core';\nimport { h, Component } from 'preact';\nimport Button from '@material-ui/core/Button';\nimport Form from '../form';\nimport styles from \"./style.css\";\n\nclass EditAddBill extends Component {\n    constructor(){\n        super();\n        this.state = {\n            showDialog: false\n        }\n    }\n    render({ open }, { showDialog }) {\n        this.state.showDialog = open;\n        return (\n            <div>\n                <Dialog onClose={() => { }} aria-labelledby=\"customized-dialog-title\" open={showDialog}>\n                    <DialogTitle id=\"customized-dialog-title\" onClose={() => { }}>\n                       <div className={styles.dialogHeader}>\n                       <span>Bill</span>\n                        <Button autoFocus onClick={()=>this.setState({showDialog: false})} color=\"primary\">\n                            Close\n                        </Button>\n                       </div>\n\n                    </DialogTitle>\n                    <DialogContent dividers>\n                        <Form noValidate autoComplete=\"off\">\n                            <TextField className={styles.textfieldInput} fullWidth id=\"fillwewedd-basic\" name=\"billId\" type=\"text\" label=\"Bill ID\" variant=\"filled\" />\n                            <TextField className={styles.textfieldInput} fullWidth id=\"djfkdwedaf\" name=\"premiseID\" type=\"number\" label=\"Premise ID\" variant=\"filled\" />\n                            <TextField className={styles.textfieldInput} fullWidth id=\"fiqtqlleadfdd-basic\"  type=\"number\" name=\"memberID\" label=\"Member ID\" variant=\"filled\" />\n                            <Button variant=\"contained\" className={styles.submitBtn} autoFocus type=\"submit\" onClick={_ => { }} color=\"primary\">Save</Button>\n                        </Form>\n\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default EditAddBill;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"tableContainer__1FQYm\",\"aliasPointer\":\"aliasPointer__jSQYM\",\"tableTitle\":\"tableTitle__1ddsZ\",\"tableSection\":\"tableSection__3k6xY\",\"rowCaptalize\":\"rowCaptalize__LaOMp\",\"tdCheckbox\":\"tdCheckbox__6TPp8\",\"tableHeader\":\"tableHeader__1He32\",\"rightSide\":\"rightSide__2ujXD\",\"input_Container\":\"input_Container__2t4rG\",\"hiddingBtn\":\"hiddingBtn__8BnMz\",\"showBtn\":\"showBtn___hb_o\",\"loadingBar\":\"loadingBar__1KIeG\",\"field\":\"field__61qw9\",\"totalSection\":\"totalSection__3OsMu\",\"hasTabs\":\"hasTabs__mYh8D\",\"btnsContainer\":\"btnsContainer__2lk_k\",\"leftSide\":\"leftSide__2apUr\"};"],"sourceRoot":""}