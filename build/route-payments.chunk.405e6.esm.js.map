{"version":3,"sources":["webpack:///./routes/payments/index.js","webpack:///./components/form/index.js","webpack:///./routes/payments/style.css","webpack:///./model/payment/index.js","webpack:///./components/add-edit-payment/style.css","webpack:///./components/data-table/index.js","webpack:///./components/add-edit-payment/index.js"],"names":["PaymentAdminUI","Component","constructor","super","this","state","checkedData","Map","openDialog","membersList","rowData","undefined","_rowDef","bind","props","isLoading","PaymentModel","paymentList","setState","componentDidMount","getMembers","_onCheckbox","evt","memberId","target","checked","set","delete","_onRowClick","tagName","row","index","onClick","type","onChange","paymentId","billId","amountPaid","totalAmount","premisId","render","disabled","Array","from","values","length","className","styles","memberAdminContainer","btnsContainer","_","variant","color","tableContiner","tableSection","rowDef","tableContainer","showCheckBoxes","data","name","open","Form","value","ref","createRef","current","elements","forEach","elt","oninput","updateFormValue","onchange","getAttribute","Number","Date","onUpdateFormValue","onSubmit","preventDefault","propsObj","children","module","exports","DataTable","tableData","columns","selectAll","selectedRows","Set","footDef","getColumns","onRowClicked","isArray","child","ColDef","onRowSectionChange","has","deSelectRow","selectRow","rowNumbers","showRowNumbers","Object","entries","map","td","tdName","tdValue","toLocaleString","onRowSelection","add","WeakSet","se","lectedRows","renderTableHeader","keys","columnName","column","sortable","sortBy","renderTableBody","allowedRows","col","renderTableFoot","result","calculate","d","isNaN","reduce","acc","currVal","_searchObject","seachObject","queryString","searchArray","found","objectValue","valueType","toString","toLowerCase","includes","search","filter","singleData","trim","searchValue","AddEditPayment","showDialog","onClose","aria-labelledby","id","dialogHeader","autoFocus","dividers","noValidate","autoComplete","textfieldInput","fullWidth","label","submitBtn"],"mappings":"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","file":"route-payments.chunk.405e6.esm.js","sourcesContent":["import { Component } from \"preact\";\nimport styles from \"./style.css\";\nimport Button from '@material-ui/core/Button';\nimport { ColDef, DataTable } from '../../components/data-table';\nimport AddEditPayment from \"../../components/add-edit-payment\";\nimport PaymentModel from \"../../model/payment\";\n\nexport default class PaymentAdminUI extends Component {\n    constructor() {\n        super();\n        this.state = {\n            checkedData: new Map(),\n            openDialog: false,\n            membersList: [],\n            rowData: undefined\n        }\n        this._rowDef = this._rowDef.bind(this);\n    }\n\n    async getMembers() {\n        this.props.isLoading(true);\n        const membersList = await PaymentModel.paymentList();\n        this.props.isLoading(false);\n        this.setState({ membersList })\n    }\n\n    componentDidMount() {\n        this.getMembers()\n    }\n\n    _onCheckbox(evt, rowData) {\n        const memberId = rowData.memberId;\n        const checked = evt.target.checked;\n        const checkedData = this.state.checkedData;\n        if (checked) checkedData.set(memberId, rowData);\n        else checkedData.delete(memberId);\n        this.setState({ checkedData });\n    }\n\n    _onRowClick(evt, rowData) {\n        if (evt.target.tagName == \"INPUT\") {\n            this.setState({ openDialog: false, rowData: undefined });\n            return;\n        };\n        this.setState({ openDialog: true, rowData });\n\n    }\n    _rowDef(row, index, rowData) {\n        return <tr onClick={evt => this._onRowClick(evt, rowData)}>\n            <td>\n                <input type=\"checkbox\" onChange={evt => this._onCheckbox(evt, rowData)} />\n            </td>\n            <td>{rowData.paymentId}</td>\n            <td>{rowData.billId}</td>\n            <td>{rowData.amountPaid}</td>\n            <td>{rowData.totalAmount}</td>\n            <td>{rowData.premisId}</td>\n        </tr>\n    }\n    render({ }, state) {\n        const openDialog = state.openDialog;\n        const checkedData = Array.from(state.checkedData.values());\n        const disabled = checkedData.length == 0 ? true : false;\n        return (\n            <div className={styles.memberAdminContainer}>\n                <div className={styles.btnsContainer}>\n                    <Button onClick={_ => this.setState({ openDialog: true })} variant=\"contained\" color=\"primary\"> Add payment </Button>\n                    <Button variant=\"contained\" color=\"secondary\" disabled={disabled}> Delete </Button>\n\n                </div>\n                <div className={styles.tableContiner}>\n                    <div className={styles.tableSection}>\n                        <DataTable rowDef={this._rowDef} className={`${styles.tableContainer}`} showCheckBoxes data={state.membersList}>\n                            <ColDef name=\"names\" >Payment ID</ColDef>\n                            <ColDef name=\"memberNames\" >Bill ID</ColDef>\n                            <ColDef name=\"amountPaid\" >Amount paid</ColDef>\n                            <ColDef name=\"totalAmount\" >total amount</ColDef>\n                            <ColDef name=\"memberEmail\" >premis Id</ColDef>\n                        </DataTable>\n                    </div>\n                </div>\n                <AddEditPayment open={(openDialog)} />\n            </div>\n\n        )\n    }\n}","import { Component, createRef } from \"preact\";\r\nexport default class Form extends Component {\r\n    state = {\r\n        value: {}\r\n    };\r\n    ref = createRef();\r\n    componentDidMount(){\r\n        // const onLine = window.navigator.onLine;\r\n        // if (!onLine) return alert(\"There is no internet connection.\");\r\n        if (this.ref.current){\r\n            Array.from(this.ref.current.elements).forEach(elt=>{\r\n                elt.oninput = (evt)=>this.updateFormValue(evt);\r\n                elt.onchange = (evt)=>this.updateFormValue(evt);\r\n            })\r\n        }\r\n    }\r\n    updateFormValue(evt) {\r\n        const value = this.state.value;\r\n        value[evt.target.name] = evt.target.value;\r\n        if(!evt.target.getAttribute(\"name\")) return;\r\n        switch (evt.target.type) {\r\n            case \"number\":\r\n                value[evt.target.name] = Number(evt.target.value);\r\n                break;\r\n            case \"date\":\r\n                value[evt.target.name] = new Date(evt.target.value);\r\n                break;\r\n            default:\r\n                value[evt.target.name] = evt.target.value;\r\n                break;\r\n        }\r\n        this.setState({\r\n            value\r\n        });\r\n        if(this.props.onUpdateFormValue){\r\n            this.props.onUpdateFormValue(value);\r\n        }\r\n    }\r\n    get value() {\r\n        return this.state.value\r\n    }\r\n    onSubmit(evt) {\r\n        evt.preventDefault();\r\n        const value = {};\r\n        Array.from(this.ref.current.elements)\r\n            .forEach(elt=>{\r\n                if(elt.name) {\r\n                    value[elt.name] = elt.value;\r\n                }\r\n            })\r\n        this.props.onSubmit(value);\r\n    }\r\n    render(props, state) {\r\n        if (this.props.onSubmit) {\r\n            this.onSubmit = this.onSubmit = this.onSubmit\r\n        }\r\n        const propsObj = { ...props, onSubmit: (evt) => { this.onSubmit(evt) } };\r\n        return <form {...propsObj} ref={this.ref}>\r\n            {props.children}\r\n        </form>\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"tableContainer__pVY2x\",\"aliasPointer\":\"aliasPointer__3i6Ac\",\"tableTitle\":\"tableTitle__2Zmci\",\"tableSection\":\"tableSection__1qeUH\",\"rowCaptalize\":\"rowCaptalize__34gDH\",\"tdCheckbox\":\"tdCheckbox__GiExU\",\"tableHeader\":\"tableHeader__3vrL7\",\"rightSide\":\"rightSide__uByak\",\"input_Container\":\"input_Container__4L0VM\",\"hiddingBtn\":\"hiddingBtn__3NPPC\",\"showBtn\":\"showBtn__1owXX\",\"loadingBar\":\"loadingBar__3yQfd\",\"field\":\"field__pGWV1\",\"totalSection\":\"totalSection__31BXi\",\"hasTabs\":\"hasTabs__2hf4Y\",\"btnsContainer\":\"btnsContainer__3Os1R\",\"leftSide\":\"leftSide__2b0Si\"};","export default class PaymentModel{\n    static async paymentList(){\n        return[\n            {\n                paymentId: 1,\n                billId: 2,\n                amountPaid: 100,\n                totalAmount: 100,\n                premisId: 12\n            }\n        ]\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"submitBtn__3SccR\",\"textfieldInput\":\"textfieldInput__WgbCr\",\"dialogHeader\":\"dialogHeader__RS9TD\"};","import { h, Component } from \"preact\";\n\n\nexport class DataTable extends Component {\n    constructor(props) {\n        super();\n        this.props = props;\n\n        this.state = {\n            tableData: props.data || [],\n            columns: {},\n            selectAll: false,\n            selectedRows: new Set()\n        };\n        if (props.rowDef) this.rowDef = props.rowDef.bind(this);\n        if (props.footDef) this.footDef = props.footDef;\n\n\n        this.getColumns();\n\n        this.onRowClicked = !this.props.onRowClicked ? () => { } : this.props.onRowClicked;\n        this.selectAll = this.selectAll.bind(this);\n\n    }\n    get selectedRows() {\n        return this.state.selectedRows;\n    }\n    getColumns() {\n        const children = Array.isArray(this.props.children) ? this.props.children : [this.props.children];\n        for (const child of children) {\n            if (child.type != ColDef) continue;\n            this.state.columns[child.props.name] = child;\n        }\n    }\n\n    onRowSectionChange(rowData) {\n        const selectedRows = this.state.selectedRows;\n\n        if (selectedRows.has(rowData)) {\n            this.deSelectRow(rowData);\n        } else {\n            this.selectRow(rowData);\n        }\n        this.setState({\n            selectedRows: selectedRows\n        });\n\n    }\n\n    rowDef(row, index, rowData) {\n        const rowNumbers = this.props.showRowNumbers ? <td>{index + 1}</td> : null;\n        const showCheckBoxes = this.props.showCheckBoxes ?\n            <td><input onChange={evt => this.onRowSectionChange(rowData)} type=\"checkbox\" checked={this.state.selectedRows.has(rowData)} /></td>\n            : null;\n        return [\n            <tr onClick={evt => this.onRowClicked(evt, rowData, index)}>\n                {showCheckBoxes}\n                {rowNumbers}\n                {Object.entries(row).map((td) => {\n                    const [tdName, tdValue] = td;\n                    return [\n                        <td className={tdName}>{tdValue.toLocaleString()}</td>\n                    ]\n                })}\n            </tr>\n        ];\n    }\n\n    get selectedRows() {\n        return this.state.selectedRows;\n    }\n\n    onRowSelection(rowData) {\n        if (!this.props.onRowSelection) return;\n        this.props.onRowSelection(rowData, this);\n    }\n\n    selectRow(row) {\n        if (this.state.selectedRows.has(row)) return;\n        let selectedRows = this.state.selectedRows;\n        selectedRows.add(row);\n        this.setState({ selectedRows });\n        this.onRowSelection(row);\n    }\n\n    deSelectRow(row) {\n        if (!this.state.selectedRows.has(row)) return;\n        let selectedRows = this.state.selectedRows;\n        selectedRows.delete(row);\n        this.setState({ selectedRows });\n        this.onRowSelection(null);\n\n    }\n\n    selectAll(value) {\n        let selectedRows = new WeakSet()\n\n        if (value) {\n            this.state.tableData.forEach(row => {\n                se > lectedRows.add(row)\n            });\n        }\n\n        this.setState({\n            selectAll: value,\n            selectedRows: selectedRows\n        });\n\n\n    }\n\n    renderTableHeader(state) {\n        const showCheckBoxes = this.props.showCheckBoxes ? <th><input type=\"checkbox\" disabled onChange={evt => this.selectAll(evt.target.checked)} /></th> : null;\n        const rowNumbers = this.props.showRowNumbers ? <th>#</th> : null;\n        return [showCheckBoxes, rowNumbers, Object.keys(state.columns).map(columnName => {\n            const column = state.columns[columnName];\n            return <th onClick={(evt) => { return column.props.sortable ? this.sortBy(columnName) : null }}>{column.props.children}</th>\n        })];\n    }\n\n    renderTableBody(data) {\n        const allowedRows = Object.keys(this.state.columns);\n        return data.map((row, index) => {\n            const rowData = {};\n            for (let col of allowedRows) {\n                rowData[col] = row[col];\n            }\n            const rowComponent = this.rowDef(rowData, index, row);\n            return rowComponent;\n        });\n    }\n\n      /**\n     * \n     * @param {[{}]} data \n     */\n    renderTableFoot(data) {\n        const columns = this.state.columns;\n        const result = {};\n        for (const col in columns) {\n            const func = columns[col];\n            const calculate = func.props.calculate;\n            if (calculate) {\n                const checkedData = data.map(d=>{\n                    const forCheck = d[col];\n                    if(isNaN(Number(forCheck))) d[col] = 0;\n                    return d\n                    \n                });\n                if (checkedData.length !== 0) {\n                    const value = checkedData.reduce((acc, currVal) => {\n                        return calculate(Number(acc), Number(currVal[col]));\n                    }, 0);\n                    result[col] = value;\n                }\n            }\n        }\n        const row = this.footDef ? (this.footDef(result)) : \"\";\n        return row;\n    }\n\n    sortBy(columnName) { }\n\n    /**\n     * @param {any} Object \n     * @param {string} queryString \n     * @returns {boolean}\n     */\n    _searchObject(seachObject = {}, queryString) {\n        const searchArray = !seachObject ? [] : Object.values(seachObject);\n        let found = false;\n        for (const objectValue of searchArray) {\n            const valueType = typeof objectValue;\n            if (valueType == \"boolean\" || valueType == \"string\" || valueType == \"number\") {\n                found = objectValue.toString().toLowerCase().includes(queryString);\n                if (found) break;\n            }\n            else {\n                return this._searchObject(objectValue, queryString);\n            }\n        }\n        return found;\n    }\n\n    search(queryString) {\n        const value = queryString.toLowerCase();\n        if (value == \"\") return;\n        this.state.data = this.state.data.filter(singleData => {\n            return this._searchObject(singleData, value.trim());\n        });\n    }\n\n    render(props, state) {\n        state.data = props.data;\n        const { className, searchValue = \"\" } = props;\n        this.search(searchValue);\n        return (\n            <div>\n                <table className={className} >\n                    <thead>\n                        <tr>{this.renderTableHeader(state)}</tr>\n                    </thead>\n                    <tbody>\n                        {this.renderTableBody(this.state.data)}\n                    </tbody>\n                    <tfoot>\n                        {this.renderTableFoot(state.data)}\n                    </tfoot>\n                </table>\n            </div>\n        );\n    }\n\n}\nexport class ColDef extends DataTable {\n    constructor(props, state) {\n        super(props, state);\n    }\n    render(props, state) {\n        return (\n            <div>{props.children}</div>\n        );\n    }\n}","import { Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography } from '@material-ui/core';\nimport { h, Component } from 'preact';\nimport Button from '@material-ui/core/Button';\nimport Form from '../form';\nimport styles from \"./style.css\";\n\nclass AddEditPayment extends Component {\n    constructor(){\n        super();\n        this.state = {\n            showDialog: false\n        }\n    }\n    render({ open }, { showDialog }) {\n        this.state.showDialog = open;\n        return (\n            <div>\n                <Dialog onClose={() => { }} aria-labelledby=\"customized-dialog-title\" open={showDialog}>\n                    <DialogTitle id=\"customized-dialog-title\" onClose={() => { }}>\n                       <div className={styles.dialogHeader}>\n                       <span>Payment</span>\n                        <Button autoFocus onClick={()=>this.setState({showDialog: false})} color=\"primary\">\n                            Close\n                        </Button>\n                       </div>\n\n                    </DialogTitle>\n                    <DialogContent dividers>\n                        <Form noValidate autoComplete=\"off\">\n                            <TextField className={styles.textfieldInput} fullWidth id=\"fillwewedd-basic\" label=\"Payment ID\" variant=\"filled\" />\n                            <TextField className={styles.textfieldInput} fullWidth id=\"djfkdwedaf\" type=\"email\" label=\"Bill ID\" variant=\"filled\" />\n                            <TextField className={styles.textfieldInput} fullWidth id=\"fiqtqlleadfdd-basic\" label=\"Amount Paid\" variant=\"filled\" />\n                            <TextField className={styles.textfieldInput} fullWidth id=\"filleqed-adfa\" label=\"Premis ID\" variant=\"filled\" />\n                            <Button variant=\"contained\" className={styles.submitBtn} autoFocus type=\"submit\" onClick={_ => { }} color=\"primary\">Save</Button>\n                        </Form>\n\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default AddEditPayment;"],"sourceRoot":""}