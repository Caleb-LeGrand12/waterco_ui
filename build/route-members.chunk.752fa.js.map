{"version":3,"sources":["webpack:///./components/form/index.js","webpack:///./components/add-edit-member/index.js","webpack:///./components/add-edit-member/style.css","webpack:///./model/member/index.js","webpack:///./routes/members/index.js","webpack:///./components/data-table/index.js","webpack:///./routes/members/components/admin-ui/index.js","webpack:///./routes/members/components/admin-ui/style.css"],"names":["Form","state","value","ref","createRef","componentDidMount","this","current","Array","from","elements","forEach","elt","oninput","evt","updateFormValue","onchange","target","name","getAttribute","type","Number","Date","setState","props","onUpdateFormValue","onSubmit","preventDefault","render","propsObj","children","Component","AddEditMember","showDialog","open","onClose","aria-labelledby","id","className","styles","dialogHeader","autoFocus","onClick","color","dividers","noValidate","autoComplete","textfieldInput","fullWidth","label","variant","submitBtn","module","exports","MembersModel","getAllMembers","memberId","firstName","lastName","email","Members","isLoading","status","DataTable","tableData","data","columns","selectAll","selectedRows","Set","rowDef","bind","footDef","getColumns","onRowClicked","isArray","child","ColDef","onRowSectionChange","rowData","has","deSelectRow","selectRow","row","index","rowNumbers","showRowNumbers","showCheckBoxes","onChange","checked","Object","entries","map","td","tdName","tdValue","toLocaleString","onRowSelection","add","delete","WeakSet","se","lectedRows","renderTableHeader","disabled","keys","columnName","column","sortable","sortBy","renderTableBody","allowedRows","col","renderTableFoot","result","calculate","checkedData","d","isNaN","length","reduce","acc","currVal","_searchObject","seachObject","queryString","found","values","objectValue","valueType","toString","toLowerCase","includes","search","filter","singleData","trim","searchValue","MemberAdminUI","Map","openDialog","membersList","undefined","_rowDef","getMembers","_onCheckbox","set","_onRowClick","tagName","names","memberAdminContainer","btnsContainer","tableContiner","tableSection","tableContainer"],"mappings":"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","file":"route-members.chunk.752fa.js","sourcesContent":["import { Component, createRef } from \"preact\";\r\nexport default class Form extends Component {\r\n    state = {\r\n        value: {}\r\n    };\r\n    ref = createRef();\r\n    componentDidMount(){\r\n        // const onLine = window.navigator.onLine;\r\n        // if (!onLine) return alert(\"There is no internet connection.\");\r\n        if (this.ref.current){\r\n            Array.from(this.ref.current.elements).forEach(elt=>{\r\n                elt.oninput = (evt)=>this.updateFormValue(evt);\r\n                elt.onchange = (evt)=>this.updateFormValue(evt);\r\n            })\r\n        }\r\n    }\r\n    updateFormValue(evt) {\r\n        const value = this.state.value;\r\n        value[evt.target.name] = evt.target.value;\r\n        if(!evt.target.getAttribute(\"name\")) return;\r\n        switch (evt.target.type) {\r\n            case \"number\":\r\n                value[evt.target.name] = Number(evt.target.value);\r\n                break;\r\n            case \"date\":\r\n                value[evt.target.name] = new Date(evt.target.value);\r\n                break;\r\n            default:\r\n                value[evt.target.name] = evt.target.value;\r\n                break;\r\n        }\r\n        this.setState({\r\n            value\r\n        });\r\n        if(this.props.onUpdateFormValue){\r\n            this.props.onUpdateFormValue(value);\r\n        }\r\n    }\r\n    get value() {\r\n        return this.state.value\r\n    }\r\n    onSubmit(evt) {\r\n        evt.preventDefault();\r\n        const value = {};\r\n        Array.from(this.ref.current.elements)\r\n            .forEach(elt=>{\r\n                if(elt.name) {\r\n                    value[elt.name] = elt.value;\r\n                }\r\n            })\r\n        this.props.onSubmit(value);\r\n    }\r\n    render(props, state) {\r\n        if (this.props.onSubmit) {\r\n            this.onSubmit = this.onSubmit = this.onSubmit\r\n        }\r\n        const propsObj = { ...props, onSubmit: (evt) => { this.onSubmit(evt) } };\r\n        return <form {...propsObj} ref={this.ref}>\r\n            {props.children}\r\n        </form>\r\n    }\r\n}","import { Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography } from '@material-ui/core';\nimport { h, Component } from 'preact';\nimport Button from '@material-ui/core/Button';\nimport Form from '../form';\nimport styles from \"./style.css\";\n\nclass AddEditMember extends Component {\n    constructor(){\n        super();\n        this.state = {\n            showDialog: false\n        }\n    }\n    render({ open }, { showDialog }) {\n        this.state.showDialog = open;\n        return (\n            <div>\n                <Dialog onClose={() => { }} aria-labelledby=\"customized-dialog-title\" open={showDialog}>\n                    <DialogTitle id=\"customized-dialog-title\" onClose={() => { }}>\n                       <div className={styles.dialogHeader}>\n                       <span>Member</span>\n                        <Button autoFocus onClick={()=>this.setState({showDialog: false})} color=\"primary\">\n                            Close\n                        </Button>\n                       </div>\n\n                    </DialogTitle>\n                    <DialogContent dividers>\n                        <Form noValidate autoComplete=\"off\">\n                            <TextField className={styles.textfieldInput} fullWidth id=\"filledd-basic\"  name=\"firstName\" label=\"First name\" variant=\"filled\" />\n                            <TextField className={styles.textfieldInput} fullWidth id=\"filledd-basic\" name=\"lastName\"  label=\"Last name\" variant=\"filled\" />\n                            <TextField className={styles.textfieldInput} fullWidth id=\"djfkdajdaf\" type=\"email\" name=\"email\" label=\"email\" variant=\"filled\" />\n                            <TextField className={styles.textfieldInput} fullWidth id=\"filleadfdd-basic\" name=\"passowrd\" label=\"Password\" variant=\"filled\" />\n\n                            <Button variant=\"contained\" className={styles.submitBtn} autoFocus type=\"submit\" onClick={_ => { }} color=\"primary\">Save</Button>\n                        </Form>\n\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default AddEditMember;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"submitBtn__3TmW9\",\"textfieldInput\":\"textfieldInput__dxpAX\",\"dialogHeader\":\"dialogHeader__2wV_A\"};","export default class MembersModel {\n    static async getAllMembers(){\n        return [\n            {\n                memberId: 1,\n                firstName: \"John\",\n                lastName: \"Doe\",\n                email: \"jodoe@gmail.com\"\n            }\n        ]\n    }\n}","import {h, Component} from \"preact\";\nimport MemberAdminUI from \"./components/admin-ui\";\n// import styles from \"./style.scss\";\n\nexport default class Members extends Component{\n    constructor(){\n        super();\n    }\n\n    render(){\n        return(\n            <div>\n                <MemberAdminUI isLoading={status=>this.props.isLoading(status)} />\n            </div>\n        )\n    }\n}\n","import { h, Component } from \"preact\";\n\n\nexport class DataTable extends Component {\n    constructor(props) {\n        super();\n        this.props = props;\n\n        this.state = {\n            tableData: props.data || [],\n            columns: {},\n            selectAll: false,\n            selectedRows: new Set()\n        };\n        if (props.rowDef) this.rowDef = props.rowDef.bind(this);\n        if (props.footDef) this.footDef = props.footDef;\n\n\n        this.getColumns();\n\n        this.onRowClicked = !this.props.onRowClicked ? () => { } : this.props.onRowClicked;\n        this.selectAll = this.selectAll.bind(this);\n\n    }\n    get selectedRows() {\n        return this.state.selectedRows;\n    }\n    getColumns() {\n        const children = Array.isArray(this.props.children) ? this.props.children : [this.props.children];\n        for (const child of children) {\n            if (child.type != ColDef) continue;\n            this.state.columns[child.props.name] = child;\n        }\n    }\n\n    onRowSectionChange(rowData) {\n        const selectedRows = this.state.selectedRows;\n\n        if (selectedRows.has(rowData)) {\n            this.deSelectRow(rowData);\n        } else {\n            this.selectRow(rowData);\n        }\n        this.setState({\n            selectedRows: selectedRows\n        });\n\n    }\n\n    rowDef(row, index, rowData) {\n        const rowNumbers = this.props.showRowNumbers ? <td>{index + 1}</td> : null;\n        const showCheckBoxes = this.props.showCheckBoxes ?\n            <td><input onChange={evt => this.onRowSectionChange(rowData)} type=\"checkbox\" checked={this.state.selectedRows.has(rowData)} /></td>\n            : null;\n        return [\n            <tr onClick={evt => this.onRowClicked(evt, rowData, index)}>\n                {showCheckBoxes}\n                {rowNumbers}\n                {Object.entries(row).map((td) => {\n                    const [tdName, tdValue] = td;\n                    return [\n                        <td className={tdName}>{tdValue.toLocaleString()}</td>\n                    ]\n                })}\n            </tr>\n        ];\n    }\n\n    get selectedRows() {\n        return this.state.selectedRows;\n    }\n\n    onRowSelection(rowData) {\n        if (!this.props.onRowSelection) return;\n        this.props.onRowSelection(rowData, this);\n    }\n\n    selectRow(row) {\n        if (this.state.selectedRows.has(row)) return;\n        let selectedRows = this.state.selectedRows;\n        selectedRows.add(row);\n        this.setState({ selectedRows });\n        this.onRowSelection(row);\n    }\n\n    deSelectRow(row) {\n        if (!this.state.selectedRows.has(row)) return;\n        let selectedRows = this.state.selectedRows;\n        selectedRows.delete(row);\n        this.setState({ selectedRows });\n        this.onRowSelection(null);\n\n    }\n\n    selectAll(value) {\n        let selectedRows = new WeakSet()\n\n        if (value) {\n            this.state.tableData.forEach(row => {\n                se > lectedRows.add(row)\n            });\n        }\n\n        this.setState({\n            selectAll: value,\n            selectedRows: selectedRows\n        });\n\n\n    }\n\n    renderTableHeader(state) {\n        const showCheckBoxes = this.props.showCheckBoxes ? <th><input type=\"checkbox\" disabled onChange={evt => this.selectAll(evt.target.checked)} /></th> : null;\n        const rowNumbers = this.props.showRowNumbers ? <th>#</th> : null;\n        return [showCheckBoxes, rowNumbers, Object.keys(state.columns).map(columnName => {\n            const column = state.columns[columnName];\n            return <th onClick={(evt) => { return column.props.sortable ? this.sortBy(columnName) : null }}>{column.props.children}</th>\n        })];\n    }\n\n    renderTableBody(data) {\n        const allowedRows = Object.keys(this.state.columns);\n        return data.map((row, index) => {\n            const rowData = {};\n            for (let col of allowedRows) {\n                rowData[col] = row[col];\n            }\n            const rowComponent = this.rowDef(rowData, index, row);\n            return rowComponent;\n        });\n    }\n\n      /**\n     * \n     * @param {[{}]} data \n     */\n    renderTableFoot(data) {\n        const columns = this.state.columns;\n        const result = {};\n        for (const col in columns) {\n            const func = columns[col];\n            const calculate = func.props.calculate;\n            if (calculate) {\n                const checkedData = data.map(d=>{\n                    const forCheck = d[col];\n                    if(isNaN(Number(forCheck))) d[col] = 0;\n                    return d\n                    \n                });\n                if (checkedData.length !== 0) {\n                    const value = checkedData.reduce((acc, currVal) => {\n                        return calculate(Number(acc), Number(currVal[col]));\n                    }, 0);\n                    result[col] = value;\n                }\n            }\n        }\n        const row = this.footDef ? (this.footDef(result)) : \"\";\n        return row;\n    }\n\n    sortBy(columnName) { }\n\n    /**\n     * @param {any} Object \n     * @param {string} queryString \n     * @returns {boolean}\n     */\n    _searchObject(seachObject = {}, queryString) {\n        const searchArray = !seachObject ? [] : Object.values(seachObject);\n        let found = false;\n        for (const objectValue of searchArray) {\n            const valueType = typeof objectValue;\n            if (valueType == \"boolean\" || valueType == \"string\" || valueType == \"number\") {\n                found = objectValue.toString().toLowerCase().includes(queryString);\n                if (found) break;\n            }\n            else {\n                return this._searchObject(objectValue, queryString);\n            }\n        }\n        return found;\n    }\n\n    search(queryString) {\n        const value = queryString.toLowerCase();\n        if (value == \"\") return;\n        this.state.data = this.state.data.filter(singleData => {\n            return this._searchObject(singleData, value.trim());\n        });\n    }\n\n    render(props, state) {\n        state.data = props.data;\n        const { className, searchValue = \"\" } = props;\n        this.search(searchValue);\n        return (\n            <div>\n                <table className={className} >\n                    <thead>\n                        <tr>{this.renderTableHeader(state)}</tr>\n                    </thead>\n                    <tbody>\n                        {this.renderTableBody(this.state.data)}\n                    </tbody>\n                    <tfoot>\n                        {this.renderTableFoot(state.data)}\n                    </tfoot>\n                </table>\n            </div>\n        );\n    }\n\n}\nexport class ColDef extends DataTable {\n    constructor(props, state) {\n        super(props, state);\n    }\n    render(props, state) {\n        return (\n            <div>{props.children}</div>\n        );\n    }\n}","import { Component } from \"preact\";\nimport styles from \"./style.css\";\nimport Button from '@material-ui/core/Button';\nimport { ColDef, DataTable } from '../../../../components/data-table/index';\nimport AddEditMember from \"../../../../components/add-edit-member\";\nimport MembersModel from '../../../../model/member';\n\nexport default class MemberAdminUI extends Component {\n    constructor() {\n        super();\n        this.state = {\n            checkedData: new Map(),\n            openDialog: false,\n            membersList: [],\n            rowData: undefined\n        }\n        this._rowDef = this._rowDef.bind(this);\n    }\n\n    async getMembers() {\n        this.props.isLoading(true);\n        const membersList = await MembersModel.getAllMembers();\n        this.props.isLoading(false);\n        this.setState({ membersList })\n    }\n\n    componentDidMount() {\n        this.getMembers()\n    }\n\n    _onCheckbox(evt, rowData) {\n        const memberId = rowData.memberId;\n        const checked = evt.target.checked;\n        const checkedData = this.state.checkedData;\n        if (checked) checkedData.set(memberId, rowData);\n        else checkedData.delete(memberId);\n        this.setState({ checkedData });\n    }\n\n    _onRowClick(evt, rowData) {\n        if (evt.target.tagName == \"INPUT\") {\n            this.setState({ openDialog: false, rowData: undefined });\n            return;\n        };\n        this.setState({ openDialog: true, rowData });\n\n    }\n    _rowDef(row, index, rowData) {\n        const names = `${rowData.firstName} ${rowData.lastName}`;\n        return <tr onClick={evt => this._onRowClick(evt, rowData)}>\n            <td>\n                <input type=\"checkbox\" onChange={evt => this._onCheckbox(evt, rowData)} />\n            </td>\n            <td>{rowData.memberId}</td>\n            <td>{names}</td>\n            <td>{rowData.email}</td>\n        </tr>\n    }\n    render({ }, state) {\n        const openDialog = state.openDialog;\n        const checkedData = Array.from(state.checkedData.values());\n        const disabled = checkedData.length == 0 ? true : false;\n        return (\n            <div className={styles.memberAdminContainer}>\n                <div className={styles.btnsContainer}>\n                    <Button onClick={_ => this.setState({ openDialog: true })} variant=\"contained\" color=\"primary\"> Add member </Button>\n                    <Button variant=\"contained\" color=\"secondary\" disabled={disabled}> Delete </Button>\n\n                </div>\n                <div className={styles.tableContiner}>\n                    <div className={styles.tableSection}>\n                        <DataTable rowDef={this._rowDef} className={`${styles.tableContainer}`} showCheckBoxes data={state.membersList}>\n                            <ColDef name=\"names\" >Member ID</ColDef>\n                            <ColDef name=\"memberNames\" >Member names</ColDef>\n                            <ColDef name=\"memberEmail\" >Email </ColDef>\n                        </DataTable>\n                    </div>\n                </div>\n                <AddEditMember open={(openDialog)} />\n            </div>\n\n        )\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"tableContainer__1n8wi\",\"aliasPointer\":\"aliasPointer__3vKr_\",\"tableTitle\":\"tableTitle__ME5Y1\",\"tableSection\":\"tableSection__2Bjfv\",\"rowCaptalize\":\"rowCaptalize__2dYaB\",\"tdCheckbox\":\"tdCheckbox__2SQ44\",\"tableHeader\":\"tableHeader__14BQP\",\"rightSide\":\"rightSide__2AUh6\",\"input_Container\":\"input_Container__1XpaG\",\"hiddingBtn\":\"hiddingBtn__VifKz\",\"showBtn\":\"showBtn__34s7V\",\"loadingBar\":\"loadingBar__3RHN-\",\"field\":\"field__t8nWc\",\"totalSection\":\"totalSection__vzzBU\",\"hasTabs\":\"hasTabs__2sHfO\",\"btnsContainer\":\"btnsContainer__3rvG8\",\"leftSide\":\"leftSide__3NZ7m\"};"],"sourceRoot":""}